{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'section-related-products.css' | asset_url | stylesheet_tag }}

{% if section.settings.image_shape == 'blob' %}
  {{ 'mask-blobs.css' | asset_url | stylesheet_tag }}
{%- endif -%}

{{ 'quick-add.css' | asset_url | stylesheet_tag }}

<script src='{{ 'quick-add.js' | asset_url }}' defer='defer'></script>

{%- style -%}
     .section-{{ section.id }}-padding {
       padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
       padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
     }

     @media screen and (min-width: 750px) {
       .section-{{ section.id }}-padding {
         padding-top: {{ section.settings.padding_top }}px;
         padding-bottom: {{ section.settings.padding_bottom }}px;
       }
     }
    .rebuy-widget .card__content {
    	padding: 0;
    }
   .rebuy-widget .card__information {
   	padding-left: 0;
   	padding-right: 0;
   }
  #shopify-section-{{ section.id }} .recommended-product-grid {
  column-gap: var(--grid-mobile-horizontal-spacing);
  row-gap: var(--grid-mobile-vertical-spacing);
  }
  @media screen and (min-width: 990px) {
     #shopify-section-{{ section.id }} .recommended-product-grid {
  		column-gap: var(--grid-desktop-horizontal-spacing);
  		row-gap: var(--grid-desktop-vertical-spacing);
     }
  }
{%- endstyle -%}
<!-- Widget : Product Recommendations -->
<div data-rebuy-id='232526' data-rebuy-shopify-product-ids='{{ product.id }}'></div>
{% raw %} 
	<script id='rebuy-widget-232526' data-rebuy-shopify-product-ids='{{ product.id }}' type="text/template">
		<div class="rebuy-widget" v-cloak v-on:click="stopPropagation($event)" v-bind:id="'rebuy-widget-' + id"
			v-bind:class="['widget-type-' + config.type.replace('_','-'), 'widget-display-' + config.display_type, products.length > 0 ? 'is-visible' : 'is-hidden']">
			<div class="rebuy-widget-container" v-cloak
				v-bind:class="['widget-display-' + config.display_type, visible ? 'is-visible' : 'is-hidden' ]"
				v-on:click.self="hide()">
				<div class="rebuy-widget-content">
					<div class="rebuy-modal-close" v-on:click="hide()"> <i class="fas fa-times"></i> </div>
					<h4 class="super-title" v-if="config.language.super_title != ''" v-html="config.language.super_title"></h4>
					<h3 class="rebuy-primary-title tw-text-left !tw-py-8 page-width" v-if="config.language.title != ''" v-html="config.language.title"></h3>
					<div class="description" v-if="config.language.description != ''" v-html="config.language.description"></div>
					<div class="recommended-product-grid page-width grid--p product-grid grid--2-col-tablet-down grid--4-col-desktop">
						<li class="grid__item scroll-trigger animate--slide-in" data-cascade v-bind:style="{ '--animation-order': product_index }" v-for="(product, product_index) in products">
							<div class="card-wrapper product-card-wrapper"
								v-bind:class="[product.handle, 'product-id-' + product.id, cartHasProduct(product) ? 'cart-has-item' : '', productTagClasses(product)]">
								<div class="card card--card tw-group card--media gradient tw-rounded-[2px] tw-overflow-hidden"
									v-bind:style="{ '--ratio-percent': '125%' }">
									<div class="card__inner ratio tw-rounded-[2px] tw-overflow-hidden"
										v-bind:style="{ '--ratio-percent': '125%' }">
										<!-- Media Section -->
										<div class="card__media tw-relative">
											<div class="card-media-carousel">
												<div class="card-media-container" v-bind:style="{ '--ratio-percent': '100%' }">
													<a class="rebuy-product-image" 
														v-if="Shopify.country === 'GB'"
														v-bind:href="learnMoreURL(product).replace(/^/,'/en-gb').replace('/en-gb/en-gb','/en-gb')"
														v-bind:class="[hasLearnMore() ? 'clickable' : '']"> 
														<img v-bind:src="itemImage(product, product.selected_variant, '900x')"
															v-bind:alt="'View ' + product.title"
															class="card-media-image motion-reduce"
															loading="lazy">
													</a>
													<a class="rebuy-product-image" 
														v-else-if="Shopify.country === 'CA'"
														v-bind:href="learnMoreURL(product).replace(/^/,'/en-ca').replace('/en-ca/en-ca','/en-ca')"
														v-bind:class="[hasLearnMore() ? 'clickable' : '']"> 
														<img v-bind:src="itemImage(product, product.selected_variant, '900x')"
															v-bind:alt="'View ' + product.title"
															class="card-media-image motion-reduce"
															loading="lazy">
													</a>
													<a class="rebuy-product-image" 
														v-else
														v-bind:href="learnMoreURL(product)" 
														v-on:click="learnMore(product);"
														v-bind:class="[hasLearnMore() ? 'clickable' : '']">
														<img v-bind:src="itemImage(product, product.selected_variant, '900x')"
															v-bind:alt="'View ' + product.title"
															class="card-media-image motion-reduce"
															loading="lazy"> 
													</a>
												</div>
											</div>
										</div>

										<!-- Quick Add Button (shown on hover) -->
										<div class="card__quick-add tw-absolute tw-bottom-0 tw-left-0 tw-right-0 tw-p-4 group-hover:tw-opacity-100 tw-opacity-0 tw-transition-opacity tw-duration-600 tw-pointer-events-none group-hover:tw-pointer-events-auto">
											<div class="quick-add no-js-hidden">
												<modal-opener v-bind:data-modal="'#RebuyQuickAdd-' + product.id">
													<button class="quick-add__submit button button--full-width button--secondary tw-text-[10px] lg:tw-text-[12px] tw-rounded-[2px]"
														type="button"
														name="add"
														aria-haspopup="dialog"
														v-bind:aria-labelledby="'rebuy-quick-add-' + product.id + '-submit'"
														v-bind:data-product-url="learnMoreURL(product)"
														v-bind:id="'rebuy-quick-add-' + product.id + '-submit'">
														<span>Choose Options</span>
														<div class="loading__spinner hidden" role="status">
															<svg aria-hidden="true" focusable="false" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
																<circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
															</svg>
														</div>
													</button>
												</modal-opener>
											</div>
										</div>
									</div>

									<!-- Product Information -->
									<div class="card__content">
										<div class="card__information tw-flex tw-flex-row tw-justify-between">
											<div class="primary tw-flex tw-flex-col tw-gap-2">
												<h3 class="card__heading">
													<a class="full-unstyled-link tw-text-[12px] tw-leading-[15px] lg:tw-text-[14px] lg:tw-leading-[17px]" 
														v-if="Shopify.country === 'GB'"
														v-bind:href="learnMoreURL(product).replace(/^/,'/en-gb').replace('/en-gb/en-gb','/en-gb')"
														v-html="product.title"
														v-bind:class="[hasLearnMore() ? 'clickable gb' : '']"></a>
													<a class="full-unstyled-link tw-text-[12px] tw-leading-[15px] lg:tw-text-[14px] lg:tw-leading-[17px]" 
														v-else-if="Shopify.country === 'CA'"
														v-bind:href="learnMoreURL(product).replace(/^/,'/en-ca').replace('/en-ca/en-ca','/en-ca')"
														v-html="product.title"
														v-bind:class="[hasLearnMore() ? 'clickable ca' : '']"></a>
													<a class="full-unstyled-link tw-text-[12px] tw-leading-[15px] lg:tw-text-[14px] lg:tw-leading-[17px]" 
														v-else
														v-bind:href="learnMoreURL(product)"
														v-on:click="learnMore(product);" 
														v-html="product.title"
														v-bind:class="[hasLearnMore() ? 'clickable us' : '']"></a>
												</h3>

												<div class="card-information">
													<!-- Variant Title -->
													<div class="rebuy-variant-title caption-large light" v-if="showVariantTitle(product)" v-html="product.selected_variant.title">
													</div>

													<!-- Reviews -->
													<div class="rating" v-if="hasProductReviews(product)"> 
														<span class="rebuy-star-rating"> 
															<span class="rebuy-star-rating-background"></span> 
															<span class="rebuy-star-rating-foreground" v-bind:style="{ width: productReviewRatingPercentage(product) }"></span> 
														</span> 
														<span class="rebuy-review-count" v-html="productReviewCount(product)"></span> 
													</div>

													<!-- Price -->
													<div class="price">
														<div class="price__container">
															<div class="price__sale" v-if="variantOnSale(product, product.selected_variant)">
																<span class="visually-hidden visually-hidden--inline">Regular price</span>
																<span>
																	<s class="price-item price-item--regular" v-html="formatMoney(variantCompareAtPrice(product, product.selected_variant))"></s>
																</span>
																<span class="visually-hidden visually-hidden--inline">Sale price</span>
																<span class="price-item price-item--sale price-item--last" v-html="formatMoney(variantPrice(product, product.selected_variant))"></span>
															</div>
															<div class="price__regular" v-else>
																<span class="visually-hidden visually-hidden--inline">Regular price</span>
																<span class="price-item price-item--regular" v-html="formatMoney(variantPrice(product, product.selected_variant))"></span>
															</div>
														</div>
													</div>

													<!-- Product Description -->
													<div class="rebuy-product-description caption-large light" v-if="showProductDescription(product)"
														v-html="text(product.body_html)"></div>
												</div>
											</div>

											<!-- Swatches Section -->
											<div class="secondary tw-flex tw-flex-col tw-gap-3 tw-pt-[1px]">
												<!-- Color Swatches -->

												<!-- Debug: Only show for first product -->
												<div v-if="product_index === 10000" class="debug-info tw-text-[8px] tw-bg-yellow-100 tw-p-2 tw-mb-2 tw-border">
													<strong>🐛 Debug - Product {{ product.id }}:</strong><br/>
													<strong>Title:</strong> {{ product.title }}<br/>
													<strong>Standard Options:</strong> {{ (product.options || []).length }} options<br/>
													<div v-if="product.options && product.options.length > 0">
														<div v-for="(option, idx) in product.options">
															Option {{ idx }}: {{ option.name }} = {{ (option.values || []).join(', ') }}
														</div>
													</div>
													<strong>Product Keys:</strong> {{ Object.keys(product).join(', ') }}<br/>
													<strong>Colorsets JSON:</strong> {{ product?.metafields?.options?.colorsets }}<br/>

													<strong>Variants Count:</strong> {{ (product.variants || []).length }}<br/>
													<strong>Has Images:</strong> {{ (product.images || []).length }} images
												</div>

												<!-- Temporarily disabled colorsets until we understand the data structure -->
												<div v-if="false" class="rebuy-color-swatches">
													<!-- Will implement once we see the debug data -->
												</div>
											</div>
										</div>

										<!-- Badges -->
										<div class="card__badge">
											<span v-if="!variantAvailable(product.selected_variant)"
												class="badge badge--bottom-left color-accent-1">
												Sold out
											</span>
											<span v-else-if="variantOnSale(product, product.selected_variant)"
												class="badge badge--bottom-left color-accent-2">
												Sale
											</span>
										</div>
									</div>

									<!-- Additional Options (Subscription, Quantity) -->
									<div class="rebuy-product-options tw-p-4" v-if="showSubscriptionOptions(product) || hasQuantityInputEnabled()">
										<div class="subscription-checkbox tw-mb-2" v-if="showSubscriptionOptions(product)"> 
											<label class="rebuy-checkbox-label tw-flex tw-items-center tw-gap-2"> 
												<input class="checkbox-input rebuy-checkbox"
													v-model="product.subscription" 
													v-on:change="toggleSubscription(product)" 
													type="checkbox" /> 
												<span class="checkbox-label tw-text-[10px]" v-html="upgradeToSubscriptionLabel(product)"></span> 
											</label> 
										</div>
										<div class="subscription-frequency tw-mb-2" v-if="showSubscriptionFrequency(product)"> 
											<select class="rebuy-select tw-text-[10px]"
												v-model="product.subscription_frequency" 
												v-on:change="updateSubscriptionFrequency(product)">
												<option v-for="frequency in product.subscription_frequencies" v-bind:value="frequency">
													{{ frequencyLabel(frequency, product.subscription_interval) }}
												</option>
											</select> 
										</div>
										<div class="product-quantity" v-if="hasQuantityInputEnabled()">
											<div class="rebuy-select-wrapper tw-flex tw-items-center tw-gap-2"> 
												<label class="rebuy-label tw-text-[10px]">Quantity</label> 
												<select class="rebuy-select tw-text-[10px]" v-model="product.quantity">
													<option v-for="n in maxQuantityInputValue()" v-bind:value="n">{{ n }}</option>
												</select> 
											</div>
										</div>
									</div>
								</div>
							</div>
						</li>
					</div>
					<div class="rebuy-modal-actions" v-if="showContinueButton()"> 
						<button class="rebuy-button decline" v-on:click="hide()" type="button"> 
							<span v-html="continueLabel()"></span> 
						</button> 
					</div>
				</div>
			</div>
		</div>
	</script>
{% endraw %}
<!-- End Widget : Product Recommendations -->

<!-- Rebuy Quick Add Modals (dynamically created by JavaScript) -->
<script>
  // Enhanced Rebuy Quick Add Modal Creation
  window.RebuyQuickAddModals = window.RebuyQuickAddModals || new Map();

  // Create dynamic quick-add modal for Rebuy products
  function createRebuyQuickAddModal(productId, productUrl) {
    const modalId = `RebuyQuickAdd-${productId}`;

    // Check if modal already exists
    if (document.querySelector(`#${modalId}`)) {
      return document.querySelector(`#${modalId}`);
    }

    // Create the modal HTML structure
    const modalHTML = `
    <div class="shopify-section" id="shopify-section-rebuy-${productId}">
      <quick-add-modal id="${modalId}" class="quick-add-modal">
        <div
          role="dialog"
          aria-label="{{ 'products.product.choose_product_options' | t | escape }}"
          aria-modal="true"
          class="quick-add-modal__content global-settings-popup"
          tabindex="-1"
        >
          <button
            id="ModalClose-${productId}"
            type="button"
            class="quick-add-modal__toggle"
            aria-label="{{ 'accessibility.close' | t | escape }}"
          >
            {{ 'icon-close.svg' | inline_asset_content }}
          </button>
          <div id="QuickAddInfo-${productId}" class="quick-add-modal__content-info">
            <!-- Content will be loaded here -->
          </div>
        </div>
      </quick-add-modal>
    </div>
  `;

    // Add modal to the body
    document.body.insertAdjacentHTML('beforeend', modalHTML);

    // Get the newly created modal
    const quickAddModal = document.querySelector(`#${modalId}`);

    if (quickAddModal) {
      // Store reference for cleanup
      window.RebuyQuickAddModals.set(productId, quickAddModal);

      // Manually set the modalContent property since the constructor ran before HTML was added
      const modalContent = quickAddModal.querySelector(`#QuickAddInfo-${productId}`);
      if (modalContent) {
        quickAddModal.modalContent = modalContent;
      }
    }

    return quickAddModal;
  }

  // Cleanup function for when Rebuy widget updates
  function cleanupRebuyModals() {
    window.RebuyQuickAddModals.forEach((modal, productId) => {
      const modalElement = document.querySelector(`#RebuyQuickAdd-${productId}`);
      if (modalElement) {
        modalElement.remove();
      }
    });
    window.RebuyQuickAddModals.clear();
  }

  // Listen for Rebuy widget updates to create/cleanup modals
  document.addEventListener('DOMContentLoaded', function () {
    // Handle modal opener clicks for Rebuy products
    document.addEventListener('click', function (e) {
      const modalOpener = e.target.closest('modal-opener[data-modal^="#RebuyQuickAdd-"]');
      if (!modalOpener) return;

      e.preventDefault();

      const modalId = modalOpener.getAttribute('data-modal').substring(1); // Remove #
      const productId = modalId.replace('RebuyQuickAdd-', '');
      const button = modalOpener.querySelector('button[data-product-url]');

      if (!button) return;

      const productUrl = button.getAttribute('data-product-url');
      if (!productUrl) return;

      // Create modal if it doesn't exist
      let modal = document.querySelector(`#${modalId}`);
      if (!modal) {
        modal = createRebuyQuickAddModal(productId, productUrl);
      }

      if (modal && modal.show) {
        modal.show(button);
      }
    });

    // Observe for Rebuy widget changes to create modals as needed
    const rebuyWidget = document.querySelector('[data-rebuy-id="232526"]');
    if (rebuyWidget) {
      const observer = new MutationObserver(function (mutations) {
        mutations.forEach(function (mutation) {
          if (mutation.type === 'childList') {
            // Widget content changed, cleanup old modals
            setTimeout(() => {
              // Clean up orphaned modals
              const activeModalOpeners = document.querySelectorAll('modal-opener[data-modal^="#RebuyQuickAdd-"]');
              const activeProductIds = Array.from(activeModalOpeners).map((opener) =>
                opener.getAttribute('data-modal').replace('#RebuyQuickAdd-', ''),
              );

              // Remove modals for products no longer in the widget
              window.RebuyQuickAddModals.forEach((modal, productId) => {
                if (!activeProductIds.includes(productId)) {
                  const modalElement = document.querySelector(`#RebuyQuickAdd-${productId}`);
                  if (modalElement) {
                    modalElement.remove();
                  }
                  window.RebuyQuickAddModals.delete(productId);
                }
              });
            }, 100);
          }
        });
      });

      observer.observe(rebuyWidget, {
        childList: true,
        subtree: true,
      });
    }
  });
</script>

{% schema %}
{
  "name": "t:sections.related-products.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.related-products.settings.paragraph__1.content"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "t:sections.related-products.settings.paragraph__1.default",
      "label": "t:sections.related-products.settings.heading.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        },
        {
          "value": "hxl",
          "label": "t:sections.all.heading_size.options__4.label"
        },
        {
          "value": "hxxl",
          "label": "t:sections.all.heading_size.options__5.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 24,
      "step": 1,
      "default": 4,
      "label": "t:sections.related-products.settings.products_to_show.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 4,
      "label": "t:sections.related-products.settings.columns_desktop.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.related-products.settings.header__2.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.related-products.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.related-products.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.related-products.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.related-products.settings.image_ratio.label"
    },
    {
      "type": "select",
      "id": "image_shape",
      "options": [
        {
          "value": "default",
          "label": "t:sections.all.image_shape.options__1.label"
        },
        {
          "value": "arch",
          "label": "t:sections.all.image_shape.options__2.label"
        },
        {
          "value": "blob",
          "label": "t:sections.all.image_shape.options__3.label"
        },
        {
          "value": "chevronleft",
          "label": "t:sections.all.image_shape.options__4.label"
        },
        {
          "value": "chevronright",
          "label": "t:sections.all.image_shape.options__5.label"
        },
        {
          "value": "diamond",
          "label": "t:sections.all.image_shape.options__6.label"
        },
        {
          "value": "parallelogram",
          "label": "t:sections.all.image_shape.options__7.label"
        },
        {
          "value": "round",
          "label": "t:sections.all.image_shape.options__8.label"
        }
      ],
      "default": "default",
      "label": "t:sections.all.image_shape.label",
      "info": "t:sections.all.image_shape.info"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.related-products.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.related-products.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.related-products.settings.show_rating.label",
      "info": "t:sections.related-products.settings.show_rating.info"
    },
    {
      "type": "header",
      "content": "t:sections.related-products.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.related-products.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.related-products.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.related-products.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
