{{ 'video-section.css' | asset_url | stylesheet_tag }}
{{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}

{%- style -%}
     .section-{{ section.id }}-padding {
       padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
       padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
     }

    .video-section.page-width .page-width {
    	padding: 0;
    }

     @media screen and (min-width: 750px) {
       .section-{{ section.id }}-padding {
         padding-top: {{ section.settings.padding_top }}px;
         padding-bottom: {{ section.settings.padding_bottom }}px;
       }
     }

     .video-content-{{ section.id }} {
       margin-top: 36px;
     }

    .video-content-{{ section.id }} .rte a {
   display: inline-block;
   color: #000;
   text-underline-offset: .35rem;
   text-decoration-thickness: .15rem;
   text-decoration-color: #000;
   font-size: 1.4rem;
   margin-top: 0.5rem;
  text-decoration: underline;
     }

   @media screen and (max-width: 749px) {
   .video-content-{{ section.id }} .rte a {
   	font-size: 1.2rem;
   }
   }

     .video-content-{{ section.id }} .content-container {
       margin-top: 0;
     }

     .video-content-{{ section.id }} .content-container.quarter { max-width: 25%; }
     .video-content-{{ section.id }} .content-container.third { max-width: 33.333%; }
     .video-content-{{ section.id }} .content-container.half { max-width: 50%; }
     .video-content-{{ section.id }} .content-container.two_thirds { max-width: 66.666%; }
     .video-content-{{ section.id }} .content-container.three_quarters { max-width: 75%; }
     .video-content-{{ section.id }} .content-container.full { max-width: 100%; }

     @media screen and (max-width: 749px) {
     .video-content-{{ section.id }} {
     	margin-top: 48px;
     }
       .video-content-{{ section.id }} .content-container.quarter,
       .video-content-{{ section.id }} .content-container.third,
       .video-content-{{ section.id }} .content-container.half,
       .video-content-{{ section.id }} .content-container.two_thirds,
       .video-content-{{ section.id }} .content-container.three_quarters {
         max-width: 100%;
       }
     }

     .video-content-{{ section.id }} .content-container > * + * {
       margin-top: 1rem;
     }

     /* Video overlay title styles */
     .video-section__media--with-overlay {
       position: relative;
     }

     .video-section__overlay {
       position: absolute;
       top: 0;
       left: 0;
       right: 0;
       bottom: 0;
       display: flex;
       align-items: center;
       justify-content: center;
       z-index: 2;
       pointer-events: none;
     }

     .video-section__overlay-title {
       color: white;
       text-align: center;
       margin: 0;
       padding: 2rem;
       max-width: 80%;
       line-height: 1.2;
     }

     @media screen and (max-width: 749px) {
       .video-section__overlay-title {
         padding: 1rem;
         max-width: 90%;
       }
     }
{%- endstyle -%}

{%- liquid
  assign video_id = section.settings.video.id | default: section.settings.video_url.id
  assign video_alt = section.settings.video.alt | default: section.settings.description
  assign alt = 'sections.video.load_video' | t: description: video_alt | escape
  assign poster = section.settings.video.preview_image | default: section.settings.cover_image

  if section.settings.video != null
    assign ratio_diff = section.settings.video.aspect_ratio | minus: poster.aspect_ratio | abs
    if ratio_diff < 0.01 and ratio_diff > 0
      assign fix_ratio = true
    endif
  endif
-%}

{%- capture sizes -%}
  {% if section.settings.full_width -%}
    100vw
  {%- else -%}
    (min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 }}px, (min-width: 750px)
    calc(100vw - 10rem), 100vw
  {%- endif %}
{%- endcapture -%}

<div class='color-{{ section.settings.color_scheme }} gradient'>
  <div class='video-section isolate{% unless section.settings.full_width %} page-width{% endunless %} section-{{ section.id }}-padding'>
    {%- if section.settings.enable_autoplay -%}
      {%- comment -%} When autoplay is enabled, render video directly without deferred loading {%- endcomment -%}
      <div
        class='video-section__media video-section__media--with-overlay gradient global-media-settings{% if section.settings.full_width %} global-media-settings--full-width{% endif %}{% if fix_ratio %} media-fit-cover{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}'
        {% if poster != null %}
          style='--ratio-percent: {{ 1 | divided_by: poster.aspect_ratio | times: 100 }}%;'
        {% endif %}
      >
        {%- if section.settings.video == null and section.settings.video_url != null -%}
          {%- liquid
            assign loop = ''
            if section.settings.enable_video_looping
              assign loop = '&loop=1&playlist=' | append: video_id
            endif
          -%}
          {%- if section.settings.video_url.type == 'youtube' -%}
            <iframe
              src='https://www.youtube.com/embed/{{ video_id }}?enablejsapi=1&autoplay=1&mute=1&controls=0{{ loop }}'
              class='js-youtube'
              allow='autoplay; encrypted-media'
              allowfullscreen
              title='{{ section.settings.description | escape }}'
            ></iframe>
          {%- else -%}
            <iframe
              src='https://player.vimeo.com/video/{{ video_id }}?autoplay=1&muted=1&controls=0{{ loop }}'
              class='js-vimeo'
              allow='autoplay; encrypted-media'
              allowfullscreen
              title='{{ section.settings.description | escape }}'
            ></iframe>
          {%- endif -%}
        {%- else -%}
          {{
            section.settings.video
            | video_tag:
              image_size: '1100x',
              autoplay: true,
              loop: section.settings.enable_video_looping,
              controls: false,
              muted: true
          }}
        {%- endif -%}

        {%- unless section.settings.overlay_title == blank -%}
          <div class='video-section__overlay'>
            <h1 class='video-section__overlay-title h1'>
              {{ section.settings.overlay_title }}
            </h1>
          </div>
        {%- endunless -%}
      </div>
    {%- else -%}
      {%- comment -%} When autoplay is disabled, use deferred loading with poster image {%- endcomment -%}
      <deferred-media
        class='video-section__media video-section__media--with-overlay deferred-media gradient global-media-settings{% if section.settings.full_width %} global-media-settings--full-width{% endif %}{% if fix_ratio %} media-fit-cover{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}'
        data-media-id='{{ video_id }}'
        {% if poster != null %}
          style='--ratio-percent: {{ 1 | divided_by: poster.aspect_ratio | times: 100 }}%;'
        {% endif %}
      >
        <button
          id='Deferred-Poster-Modal-{{ video_id }}'
          class='video-section__poster media deferred-media__poster media--landscape'
          type='button'
          aria-label='{{ alt }}'
        >
          {%- if poster != null -%}
            {{
              poster
              | image_url: width: 3840
              | image_tag: sizes: sizes, widths: '375, 750, 1100, 1500, 1780, 2000, 3000, 3840', alt: alt
            }}
          {%- else -%}
            {{ 'hero-apparel-3' | placeholder_svg_tag: 'placeholder-svg placeholder' }}
          {%- endif -%}
          <span class='deferred-media__poster-button motion-reduce'>
            <span class='svg-wrapper'>
              {{- 'icon-play.svg' | inline_asset_content -}}
            </span>
          </span>
        </button>

        {%- unless section.settings.overlay_title == blank -%}
          <div class='video-section__overlay'>
            <h1 class='video-section__overlay-title h1'>
              {{ section.settings.overlay_title }}
            </h1>
          </div>
        {%- endunless -%}
        <template>
          {%- if section.settings.video == null and section.settings.video_url != null -%}
            {%- liquid
              assign loop = ''
              if section.settings.enable_video_looping
                assign loop = '&loop=1&playlist=' | append: video_id
              endif
            -%}
            {%- if section.settings.video_url.type == 'youtube' -%}
              <iframe
                src='https://www.youtube.com/embed/{{ video_id }}?enablejsapi=1&autoplay=1{{ loop }}'
                class='js-youtube'
                allow='autoplay; encrypted-media'
                allowfullscreen
                title='{{ section.settings.description | escape }}'
              ></iframe>
            {%- else -%}
              <iframe
                src='https://player.vimeo.com/video/{{ video_id }}?autoplay=1{{ loop }}'
                class='js-vimeo'
                allow='autoplay; encrypted-media'
                allowfullscreen
                title='{{ section.settings.description | escape }}'
              ></iframe>
            {%- endif -%}
          {%- else -%}
            {{
              section.settings.video
              | video_tag:
                image_size: '1100x',
                autoplay: true,
                loop: section.settings.enable_video_looping,
                controls: true,
                muted: false
            }}
          {%- endif -%}
        </template>
      </deferred-media>
    {%- endif -%}

    {%- unless section.settings.heading == blank and section.settings.description == blank -%}
      <div class='video-content-{{ section.id }} tw-flex tw-justify-start page-width'>
        <div class='content-container {{ section.settings.content_width }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}'>
          {%- unless section.settings.heading == blank -%}
            <div class='tw-mb-4'>
              <h2 class='tw-inline-flex rte tw-text-[14px] tw-leading-[18px] tw-border-b-[1.5px] tw-border-black {{ section.settings.heading_size }}'>
                {{ section.settings.heading }}
              </h2>
            </div>
          {%- endunless -%}
          {%- unless section.settings.description == blank -%}
            <div class='rte rte tw-text-[14px] tw-leading-[18px]'>
              {{ section.settings.description }}
            </div>
          {%- endunless -%}
        </div>
      </div>
    {%- endunless -%}
  </div>
</div>

{% schema %}
{
  "name": "t:sections.video.name",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "overlay_title",
      "label": "Overlay title",
      "info": "Title that displays over the video"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "t:sections.video.settings.heading.default",
      "label": "t:sections.video.settings.heading.label"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "t:sections.video.settings.description_text.label",
      "default": "t:sections.video.settings.description_text.default"
    },
    {
      "type": "select",
      "id": "content_width",
      "options": [
        {
          "value": "quarter",
          "label": "t:sections.video.settings.content_width.options__1.label"
        },
        {
          "value": "third",
          "label": "t:sections.video.settings.content_width.options__2.label"
        },
        {
          "value": "half",
          "label": "t:sections.video.settings.content_width.options__3.label"
        },
        {
          "value": "two_thirds",
          "label": "t:sections.video.settings.content_width.options__4.label"
        },
        {
          "value": "three_quarters",
          "label": "t:sections.video.settings.content_width.options__5.label"
        },
        {
          "value": "full",
          "label": "t:sections.video.settings.content_width.options__6.label"
        }
      ],
      "default": "half",
      "label": "t:sections.video.settings.content_width.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "label": "t:sections.video.settings.enable_video_looping.label",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "enable_autoplay",
      "label": "t:sections.video.settings.enable_autoplay.label",
      "default": false
    },
    {
      "type": "header",
      "content": "t:sections.video.settings.header__1.content"
    },
    {
      "type": "video",
      "id": "video",
      "label": "t:sections.video.settings.video.label"
    },
    {
      "type": "header",
      "content": "t:sections.video.settings.header__2.content"
    },
    {
      "type": "paragraph",
      "content": "t:sections.video.settings.paragraph.content"
    },
    {
      "type": "video_url",
      "id": "video_url",
      "accept": ["youtube", "vimeo"],
      "default": "https://www.youtube.com/watch?v=_9VUPq3SxOc",
      "label": "t:sections.video.settings.video_url.label",
      "info": "t:sections.video.settings.video_url.info"
    },
    {
      "type": "image_picker",
      "id": "cover_image",
      "label": "t:sections.video.settings.cover_image.label"
    },
    {
      "type": "header",
      "content": "t:sections.video.settings.header__3.content"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "t:sections.video.settings.full_width.label",
      "default": false
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "t:sections.video.presets.name"
    }
  ]
}
{% endschema %}
