<product-info
  id='MainProduct-{{ section.id }}'
  class='section-{{ section.id }}-padding gradient color-{{ section.settings.color_scheme }}'
  data-section='{{ section.id }}'
  data-product-id='{{ product.id }}'
  data-update-url='true'
  data-url='{{ product.url }}'
  {% if section.settings.image_zoom == 'hover' %}
    data-zoom-on-hover
  {% endif %}
>
  {{ 'section-main-product.css' | asset_url | stylesheet_tag }}
  {{ 'component-accordion.css' | asset_url | stylesheet_tag }}
  {{ 'component-price.css' | asset_url | stylesheet_tag }}
  {{ 'component-slider.css' | asset_url | stylesheet_tag }}
  {{ 'component-rating.css' | asset_url | stylesheet_tag }}
  {{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}
  {{ 'component-modal-media-carousel.css' | asset_url | stylesheet_tag }}

  {% unless product.has_only_default_variant %}
    {{ 'component-product-variant-picker.css' | asset_url | stylesheet_tag }}
    {{ 'component-swatch-input.css' | asset_url | stylesheet_tag }}
    {{ 'component-swatch.css' | asset_url | stylesheet_tag }}
  {% endunless %}
  {%- if product.quantity_price_breaks_configured? -%}
    {{ 'component-volume-pricing.css' | asset_url | stylesheet_tag }}
  {%- endif -%}

  {%- style -%}
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
        padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
      }

      @media screen and (min-width: 750px) {
        .section-{{ section.id }}-padding {
          padding-top: {{ section.settings.padding_top }}px;
          padding-bottom: {{ section.settings.padding_bottom }}px;
        }
      }
    .product__tab-content[aria-expanded="false"] {
    		display: none !important;
    }
    .product__tab-content .card__heading a, .product__tab-content .price span {
    		color: #000 !important;
    		font-weight: 400 !important;
    		font-size: 12px !important;
    		line-height: 15px !important;
    }
    .product__tab-content .primary {
    	gap: 2px !important;
    }
    .product__tab-content .secondary {
    	display: none !important;
    }

    .product__tab-content .quick-add__submit {
    	min-height: 24px !important;
    	height: 24px !important;
    }
  {%- endstyle -%}

  <script type='text/javascript'>
    (function e() {
      var e = document.createElement('script');
      (e.type = 'text/javascript'),
        (e.async = true),
        (e.src = '//staticw2.yotpo.com/8Jh6NwDddZhTIEl7eOeXLckQbUYrE0f7qK78qcuA/widget.js');
      var t = document.getElementsByTagName('script')[0];
      t.parentNode.insertBefore(e, t);
    })();
  </script>
  <script src='{{ 'product-info.js' | asset_url }}' defer='defer'></script>
  <script src='{{ 'product-form.js' | asset_url }}' defer='defer'></script>
  {%- if product.quantity_price_breaks_configured? -%}
    <script src='{{ 'show-more.js' | asset_url }}' defer='defer'></script>
    <script src='{{ 'price-per-item.js' | asset_url }}' defer='defer'></script>
  {%- endif -%}

  {% if section.settings.image_zoom == 'hover' %}
    <script id='EnableZoomOnHover-main' src='{{ 'magnify.js' | asset_url }}' defer='defer'></script>
  {% endif %}
  <link rel='stylesheet' href='https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css'>
  <script src='https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js'></script>
  <script src='{{ 'modal-media-carousel.js' | asset_url }}?v={{ 'now' | date: '%s' }}&debug=1' defer='defer'></script>
  {%- if request.design_mode -%}
    <script src='{{ 'theme-editor.js' | asset_url }}' defer='defer'></script>
  {%- endif -%}

  {%- assign first_3d_model = product.media | where: 'media_type', 'model' | first -%}
  {%- if first_3d_model -%}
    {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
    <link
      id='ModelViewerStyle'
      rel='stylesheet'
      href='https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css'
      media='print'
      onload="this.media='all'"
    >
    <link
      id='ModelViewerOverride'
      rel='stylesheet'
      href='{{ 'component-model-viewer-ui.css' | asset_url }}'
      media='print'
      onload="this.media='all'"
    >
  {%- endif -%}

  {% assign variant_images = product.images | where: 'attached_to_variant?', true | map: 'src' %}
  <div class='page-width'>
    <div class='product product--{{ section.settings.media_size }} product--{{ section.settings.media_position }} product--{{ section.settings.gallery_layout }} product--mobile-{{ section.settings.mobile_thumbnails }} grid grid--1-col {% if product.media.size > 0 %}grid--2-col-tablet{% else %}product--no-media{% endif %}'>
      <div class='quick-add-modal__header quick-add-only'>
        <div class='tw-flex tw-justify-between tw-items-start tw-gap-4 tw-w-full tw-mb-4'>
          <div class='product__title' {{ block.shopify_attributes }}>
            <h1 class='tw-text-[18px] tw-leading-[24px]'>{{ product.title | escape }}</h1>
            <a href='{{ product.url }}' class='product__title'>
              <h2 class='tw-text-[18px] tw-leading-[24px]'>
                {{ product.title | escape }}
              </h2>
            </a>
          </div>
          <div id='price-{{ section.id }}'>
            {%- render 'price', product: product, use_variant: true, show_badges: true, price_class: '' -%}
          </div>
        </div>
        {%- if product.description != blank -%}
          <div class='product__description rte' {{ block.shopify_attributes }}>
            {{ product.description | remove: '<p>&nbsp;</p>' }}
          </div>
        {%- endif -%}
      </div>
      <div class='grid__item product__media-wrapper tw-flex tw-justify-start tw-h-auto'>
        <!-- Default media gallery for main product page -->
        <div class='quick-add-hidden tw-max-w-full max-md:tw-w-full'>
          {%- if section.settings.gallery_layout == 'swiper_thumbnails' -%}
            {% render 'product-swiper-gallery', variant_images: variant_images %}
          {%- else -%}
            {% render 'product-media-gallery', variant_images: variant_images %}
          {%- endif -%}
        </div>

        <!-- Modal carousel for quick-add modal only -->
        <div class='quick-add-only tw-w-full tw-h-auto'>
          <div>
            {% render 'modal-media-carousel',
              product: product,
              modal_id: section.id,
              media_aspect_ratio: product.featured_media.aspect_ratio,
              lazy_load: true
            %}
          </div>
        </div>
      </div>
      <div class='product__info-wrapper grid__item{% if settings.page_width > 1400 and section.settings.media_size == "small" %} product__info-wrapper--extra-padding{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}'>
        <section
          id='ProductInfo-{{ section.id }}'
          class='product__info-container{% if section.settings.enable_sticky_info %} product__column-sticky{% endif %}'
        >
          {%- assign product_form_id = 'product-form-' | append: section.id -%}

          {%- for block in section.blocks -%}
            {%- case block.type -%}
              {%- when '@app' -%}
                {% render block %}
              {%- when 'text' -%}
                <p
                  class='product__text inline-richtext{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}'
                  {{ block.shopify_attributes }}
                >
                  {{- block.settings.text -}}
                </p>
              {%- when 'title' -%}
                <div class='product-header tw-flex tw-justify-between tw-w-full'>
                  <div class='product__title quick-add-hidden' {{ block.shopify_attributes }}>
                    <h1 class='tw-text-[18px] tw-leading-[24px] lg:tw-text-[20px] lg:tw-leading-[24px] tw-font-normal'>
                      {{ product.title | escape }}
                    </h1>
                    <a href='{{ product.url }}' class='product__title'>
                      <h2 class='tw-text-[18px] tw-leading-[24px] lg:tw-text-[24px] lg:tw-leading-[32px]'>
                        {{ product.title | escape }}
                      </h2>
                    </a>
                  </div>
                  <div
                    id='price-{{ section.id }}'
                    role='status'
                    {{ block.shopify_attributes }}
                    class='quick-add-hidden'
                  >
                    {%- render 'price',
                      product: product,
                      use_variant: true,
                      show_badges: true,
                      price_class: 'price--large'
                    -%}
                  </div>
                </div>
              {%- when 'inventory' -%}
                <p
                  class='product__inventory{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}{% if product.selected_or_first_available_variant.inventory_management != 'shopify' %} visibility-hidden{% endif %}'
                  {{ block.shopify_attributes }}
                  id='Inventory-{{ section.id }}'
                  role='status'
                >
                  {%- if product.selected_or_first_available_variant.inventory_management == 'shopify' -%}
                    {%- if product.selected_or_first_available_variant.inventory_quantity > 0 -%}
                      {%- if product.selected_or_first_available_variant.inventory_quantity
                          <= block.settings.inventory_threshold
                      -%}
                        <span class='svg-wrapper' style='color: rgb(238, 148, 65)'>
                          {{- 'icon-inventory-status.svg' | inline_asset_content -}}
                        </span>
                        {%- if block.settings.show_inventory_quantity -%}
                          {{-
                            'products.product.inventory_low_stock_show_count'
                            | t: quantity: product.selected_or_first_available_variant.inventory_quantity
                          -}}
                        {%- else -%}
                          {{- 'products.product.inventory_low_stock' | t -}}
                        {%- endif -%}
                      {%- else -%}
                        <span class='svg-wrapper' style='color: rgb(62, 214, 96)'>
                          {{- 'icon-inventory-status.svg' | inline_asset_content -}}
                        </span>
                        {%- if block.settings.show_inventory_quantity -%}
                          {{-
                            'products.product.inventory_in_stock_show_count'
                            | t: quantity: product.selected_or_first_available_variant.inventory_quantity
                          -}}
                        {%- else -%}
                          {{- 'products.product.inventory_in_stock' | t -}}
                        {%- endif -%}
                      {%- endif -%}
                    {%- else -%}
                      {%- if product.selected_or_first_available_variant.inventory_policy == 'continue' -%}
                        <span class='svg-wrapper' style='color: rgb(62, 214, 96)'>
                          {{- 'icon-inventory-status.svg' | inline_asset_content -}}
                        </span>
                        {{- 'products.product.inventory_out_of_stock_continue_selling' | t -}}
                      {%- else -%}
                        <span class='svg-wrapper' style='color: rgb(200, 200, 200)'>
                          {{- 'icon-inventory-status.svg' | inline_asset_content -}}
                        </span>
                        {{- 'products.product.inventory_out_of_stock' | t -}}
                      {%- endif -%}
                    {%- endif -%}
                  {%- endif -%}
                </p>
              {%- when 'description' -%}
                {%- if product.description != blank -%}
                  <div class='product__description rte quick-add-hidden' {{ block.shopify_attributes }}>
                    {{ product.description }}
                  </div>
                {%- endif -%}
              {%- when 'sku' -%}
                <p
                  class='product__sku{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}{% if product.selected_or_first_available_variant.sku.size == 0 %} visibility-hidden{% endif %}'
                  id='Sku-{{ section.id }}'
                  role='status'
                  {{ block.shopify_attributes }}
                >
                  <span class='visually-hidden'>{{ 'products.product.sku' | t }}:</span>
                  {{- product.selected_or_first_available_variant.sku -}}
                </p>
              {%- when 'custom_liquid' -%}
                {{ block.settings.custom_liquid }}
              {%- when 'collapsible_tab' -%}
                <div class='product__accordion accordion quick-add-hidden' {{ block.shopify_attributes }}>
                  <details id='Details-{{ block.id }}-{{ section.id }}'>
                    <summary>
                      <div class='summary__title'>
                        {% render 'icon-accordion', icon: block.settings.icon %}
                        <h2 class='h4 accordion__title inline-richtext'>
                          {{ block.settings.heading | default: block.settings.page.title | escape }}
                        </h2>
                      </div>
                      {{- 'icon-caret.svg' | inline_asset_content -}}
                    </summary>
                    <div class='accordion__content rte' id='ProductAccordion-{{ block.id }}-{{ section.id }}'>
                      {{ block.settings.content }}
                      {{ block.settings.page.content }}
                    </div>
                  </details>
                </div>
              {%- when 'quantity_selector' -%}
                <div
                  id='Quantity-Form-{{ section.id }}'
                  class='product-form__input product-form__quantity{% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_vertical_offset < 0 %} product-form__quantity-top{% endif %}'
                  {{ block.shopify_attributes }}
                >
                  {% comment %} TODO: enable theme-check once `item_count_for_variant` is accepted as valid filter {% endcomment %}
                  {% # theme-check-disable %}
                  {%- assign cart_qty = cart
                    | item_count_for_variant: product.selected_or_first_available_variant.id
                  -%}
                  {% # theme-check-enable %}
                  <label class='quantity__label form__label' for='Quantity-{{ section.id }}'>
                    {{ 'products.product.quantity.label' | t }}
                    <span class='quantity__rules-cart{% if cart_qty == 0 %} hidden{% endif %}'>
                      {%- render 'loading-spinner' -%}
                      <span
                        >(
                        {{- 'products.product.quantity.in_cart_html' | t: quantity: cart_qty -}}
                        )</span
                      >
                    </span>
                  </label>
                  <div class='price-per-item__container'>
                    <quantity-input class='quantity' data-url='{{ product.url }}' data-section='{{ section.id }}'>
                      <button class='quantity__button' name='minus' type='button'>
                        <span class='visually-hidden'>
                          {{- 'products.product.quantity.decrease' | t: product: product.title | escape -}}
                        </span>
                        <span class='svg-wrapper'>
                          {{- 'icon-minus.svg' | inline_asset_content -}}
                        </span>
                      </button>
                      <input
                        class='quantity__input'
                        type='number'
                        name='quantity'
                        id='Quantity-{{ section.id }}'
                        data-cart-quantity='{{ cart_qty }}'
                        data-min='{{ product.selected_or_first_available_variant.quantity_rule.min }}'
                        min='{{ product.selected_or_first_available_variant.quantity_rule.min }}'
                        {% if product.selected_or_first_available_variant.quantity_rule.max != null %}
                          data-max='{{ product.selected_or_first_available_variant.quantity_rule.max }}'
                          max='{{ product.selected_or_first_available_variant.quantity_rule.max }}'
                        {% endif %}
                        step='{{ product.selected_or_first_available_variant.quantity_rule.increment }}'
                        value='{{ product.selected_or_first_available_variant.quantity_rule.min }}'
                        form='{{ product_form_id }}'
                      >
                      <button class='quantity__button' name='plus' type='button'>
                        <span class='visually-hidden'>
                          {{- 'products.product.quantity.increase' | t: product: product.title | escape -}}
                        </span>
                        <span class='svg-wrapper'>
                          {{- 'icon-plus.svg' | inline_asset_content -}}
                        </span>
                      </button>
                    </quantity-input>
                    {%- liquid
                      assign volume_pricing_array = product.selected_or_first_available_variant.quantity_price_breaks | sort: 'quantity' | reverse
                      assign current_qty_for_volume_pricing = cart_qty | plus: product.selected_or_first_available_variant.quantity_rule.min
                      if cart_qty > 0
                        assign current_qty_for_volume_pricing = cart_qty | plus: product.selected_or_first_available_variant.quantity_rule.increment
                      endif
                    -%}
                    {%- if product.quantity_price_breaks_configured? -%}
                      <price-per-item
                        id='Price-Per-Item-{{ section.id }}'
                        data-section-id='{{ section.id }}'
                        data-variant-id='{{ product.selected_or_first_available_variant.id }}'
                      >
                        {%- if product.selected_or_first_available_variant.quantity_price_breaks.size > 0 -%}
                          {%- assign variant_price_compare = product.selected_or_first_available_variant.compare_at_price -%}
                          <div class='price-per-item'>
                            {%- if variant_price_compare -%}
                              <dl class='price-per-item--current'>
                                <dt class='visually-hidden'>
                                  {{ 'products.product.price.regular_price' | t }}
                                </dt>
                                <dd>
                                  <s class='variant-item__old-price'>
                                    {{ variant_price_compare | money_with_currency }}
                                  </s>
                                </dd>
                              </dl>
                            {%- endif -%}
                            {%- if current_qty_for_volume_pricing < volume_pricing_array.last.minimum_quantity -%}
                              {%- assign variant_price = product.selected_or_first_available_variant.price
                                | money_with_currency
                              -%}
                              <span class='price-per-item--current'>
                                {{- 'products.product.volume_pricing.price_at_each' | t: price: variant_price -}}
                              </span>
                            {%- else -%}
                              {%- for price_break in volume_pricing_array -%}
                                {%- if current_qty_for_volume_pricing >= price_break.minimum_quantity -%}
                                  {%- assign price_break_price = price_break.price | money_with_currency -%}
                                  <span class='price-per-item--current'>
                                    {{-
                                      'products.product.volume_pricing.price_at_each'
                                      | t: price: price_break_price
                                    -}}
                                  </span>
                                  {%- break -%}
                                {%- endif -%}
                              {%- endfor -%}
                            {%- endif -%}
                          </div>
                        {%- else -%}
                          {%- assign variant_price = product.selected_or_first_available_variant.price
                            | money_with_currency
                          -%}
                          {%- assign variant_price_compare = product.selected_or_first_available_variant.compare_at_price -%}
                          <div class='price-per-item'>
                            {%- if variant_price_compare -%}
                              <dl class='price-per-item--current'>
                                <dt class='visually-hidden'>
                                  {{ 'products.product.price.regular_price' | t }}
                                </dt>
                                <dd>
                                  <s class='variant-item__old-price'>
                                    {{ variant_price_compare | money_with_currency }}
                                  </s>
                                </dd>
                                <dt class='visually-hidden'>
                                  {{ 'products.product.price.sale_price' | t }}
                                </dt>
                                <dd>
                                  <span class='price-per-item--current'>
                                    {{- 'products.product.volume_pricing.price_at_each' | t: price: variant_price -}}
                                  </span>
                                </dd>
                              </dl>
                            {%- else -%}
                              <span class='price-per-item--current'>
                                {{- 'products.product.volume_pricing.price_at_each' | t: price: variant_price -}}
                              </span>
                            {%- endif -%}
                          </div>
                        {%- endif -%}
                      </price-per-item>
                    {%- endif -%}
                  </div>
                  <div class='quantity__rules caption' id='Quantity-Rules-{{ section.id }}'>
                    {%- if product.selected_or_first_available_variant.quantity_rule.increment > 1 -%}
                      <span class='divider'>
                        {{-
                          'products.product.quantity.multiples_of'
                          | t: quantity: product.selected_or_first_available_variant.quantity_rule.increment
                        -}}
                      </span>
                    {%- endif -%}
                    {%- if product.selected_or_first_available_variant.quantity_rule.min > 1 -%}
                      <span class='divider'>
                        {{-
                          'products.product.quantity.minimum_of'
                          | t: quantity: product.selected_or_first_available_variant.quantity_rule.min
                        -}}
                      </span>
                    {%- endif -%}
                    {%- if product.selected_or_first_available_variant.quantity_rule.max != null -%}
                      <span class='divider'>
                        {{-
                          'products.product.quantity.maximum_of'
                          | t: quantity: product.selected_or_first_available_variant.quantity_rule.max
                        -}}
                      </span>
                    {%- endif -%}
                  </div>
                  {%- if product.quantity_price_breaks_configured? -%}
                    <volume-pricing class='parent-display' id='Volume-{{ section.id }}'>
                      {%- if product.selected_or_first_available_variant.quantity_price_breaks.size > 0 -%}
                        <span class='caption-large'>{{ 'products.product.volume_pricing.title' | t }}</span>
                        <ul class='list-unstyled'>
                          <li>
                            <span>{{ product.selected_or_first_available_variant.quantity_rule.min }}+</span>
                            {%- assign price = product.selected_or_first_available_variant.price
                              | money_with_currency
                            -%}
                            <span data-text='{{ 'products.product.volume_pricing.price_at_each' | t: price: variant_price }}'>
                              {{- 'sections.quick_order_list.each' | t: money: price -}}
                            </span>
                          </li>
                          {%- for price_break in product.selected_or_first_available_variant.quantity_price_breaks -%}
                            {%- assign price_break_price = price_break.price | money_with_currency -%}
                            <li class='{%- if forloop.index >= 3 -%}show-more-item hidden{%- endif -%}'>
                              <span>
                                {{- price_break.minimum_quantity -}}
                                <span aria-hidden='true'>+</span></span
                              >
                              <span data-text='{{ 'products.product.volume_pricing.price_at_each' | t: price: price_break_price }}'>
                                {{- 'sections.quick_order_list.each' | t: money: price_break_price -}}
                              </span>
                            </li>
                          {%- endfor -%}
                        </ul>
                        {%- if product.selected_or_first_available_variant.quantity_price_breaks.size >= 3 -%}
                          <show-more-button>
                            <button
                              class='button-show-more link underlined-link'
                              id='Show-More-{{ section.id }}'
                              type='button'
                            >
                              <span class='label-show-more label-text'
                                ><span aria-hidden='true'>+ </span>{{ 'products.facets.show_more' | t }}
                              </span>
                            </button>
                          </show-more-button>
                        {%- endif -%}
                      {%- endif -%}
                    </volume-pricing>
                  {%- endif -%}
                </div>
              {%- when 'popup' -%}
                <modal-opener
                  class='product-popup-modal__opener quick-add-hidden'
                  data-modal='#PopupModal-{{ block.id }}'
                  {{ block.shopify_attributes }}
                >
                  <button
                    id='ProductPopup-{{ block.id }}'
                    class='product-popup-modal__button link'
                    type='button'
                    aria-haspopup='dialog'
                  >
                    {{ block.settings.text | default: block.settings.page.title | escape }}
                  </button>
                </modal-opener>

              {%- when 'share' -%}
                {% liquid
                  assign share_url = product.selected_variant.url | default: product.url | prepend: request.origin
                  render 'share-button', block: block, share_link: share_url
                %}

              {%- when 'variant_picker' -%}
                {% render 'product-variant-picker', product: product, block: block, product_form_id: product_form_id %}
              {%- when 'swatch_picker' -%}
                {% render 'product-swatch-picker', product: product %}
              {%- when 'buy_buttons' -%}
                {%- render 'buy-buttons',
                  block: block,
                  product: product,
                  product_form_id: product_form_id,
                  section_id: section.id,
                  show_pickup_availability: true
                -%}

              {%- when 'tabbed_list' -%}
                <div class='product__tabbed-list !tw-mt-0'>
                  <ul class='tw-flex tw-relative tw-mb-8'>
                    <li class='product__tab tw-mr-6'>
                      <button
                        class='product__tab tw-text-[12px] tw-leading-[15px] tw-border-b tw-border-black hover:tw-border-black'
                        data-panel='details'
                      >
                        Details
                      </button>
                    </li>
                    <li class='product__tab tw-mr-4'>
                      <button
                        class='product__tab tw-text-[12px] tw-leading-[15px] tw-border-b tw-border-[#ececec] hover:tw-border-black'
                        data-panel='materials'
                      >
                        Materials
                      </button>
                    </li>
                    <li class='product__tab tw-mr-6'>
                      <button
                        class='product__tab tw-text-[12px] tw-leading-[15px] tw-border-b tw-border-[#ececec] hover:tw-border-black'
                        data-panel='returns'
                      >
                        Returns
                      </button>
                    </li>
                    <li class='product__tab tw-mr-6'>
                      <button
                        class='product__tab tw-text-[12px] tw-leading-[15px] tw-border-b tw-border-[#ececec] hover:tw-border-black'
                        data-panel='shop-the-look'
                      >
                        Shop the Look
                      </button>
                    </li>
                  </ul>
                  <ul class='product__text-body tw-flex tw-flex-col' {{ block.shopify_attributes }}>
                    <li
                      class='product__tab-content rte tw-text-[12px] tw-leading-[15px] tw-flex tw-justify-between tw-gap-4'
                      data-panel='materials'
                      aria-expanded='false'
                    >
                      {% if product.metafields.options.materials.value != blank %}
                        {% for material in product.metafields.options.materials.value %}
                          {% if material.benefit != blank %}
                            <div class='image-with-text__text rte tw-text-[12px] tw-leading-[15px]'>
                              <div class='tw-flex tw-items-center tw-pb-3 tw-gap-2'>
                                {%- if material.collection != blank -%}
                                  <a
                                    href='{{ material.collection.value.url }}'
                                    class='!tw-text-black tw-text-[12px] tw-leading-[15px]'
                                  >
                                    {{- material.title -}}
                                  </a>
                                {%- else -%}
                                  <span class='!tw-text-black tw-text-[12px] tw-leading-[15px]'>
                                    {{- material.title -}}
                                  </span>
                                {%- endif -%}
                                {% if material.icon != blank %}
                                  <img
                                    class='tw-image-cover tw-w-[12px] tw-h-[12px] tw-overflow-hidden tw-pointer-events-none !tw-mb-0'
                                    src='{{ material.icon.value | image_url: width: 24 }}'
                                    alt='{{ material.title }}'
                                    width='12'
                                    height='12'
                                  >
                                {% endif %}
                              </div>
                              {{ material.benefit | metafield_text }}
                            </div>
                          {% endif %}
                        {% endfor %}
                      {% endif %}
                    </li>
                    <li
                      class='product__tab-content rte tw-text-[12px] tw-leading-[15px]'
                      data-panel='details'
                      aria-expanded='true'
                    >
                      {% if product.metafields.custom_fields.details_fit != blank %}
                        <div class='product-detail fit tw-mb-4'>
                          <h3 class='product-detail-label'>
                            <span class='!tw-text-black tw-text-[12px] tw-leading-[15px] tw-mb-3'>Fit</span>
                          </h3>
                          <div class='product-detail-content !tw-text-black tw-text-[12px] tw-leading-[15px]'>
                            {{ product.metafields.custom_fields.details_fit }}
                          </div>
                        </div>
                      {% endif %}
                      {% if product.metafields.custom_fields.details_model != blank %}
                        <div class='product-detail model tw-mb-4'>
                          <h3 class='product-detail-label'>
                            <span class='!tw-text-black tw-text-[12px] tw-leading-[15px] tw-mb-3'>Model</span>
                          </h3>
                          <div class='product-detail-content !tw-text-black tw-text-[12px] tw-leading-[15px]'>
                            {{ product.metafields.custom_fields.details_model }}
                          </div>
                        </div>
                      {% endif %}
                      {% if product.metafields.custom_fields.details_care != blank %}
                        <div class='product-detail care tw-mb-4'>
                          <h3 class='product-detail-label'>
                            <span class='!tw-text-black tw-text-[12px] tw-leading-[15px] tw-mb-3'>Care</span>
                          </h3>
                          <div class='product-detail-content *:tw-mb-4 !tw-text-black tw-text-[12px] tw-leading-[15px]'>
                            {{ product.metafields.custom_fields.details_care }}
                          </div>
                        </div>
                      {% endif %}
                      {% if product.metafields.custom_fields.details_origin != blank %}
                        <div class='product-detail origin tw-mb-4'>
                          <h3 class='product-detail-label'>
                            <span class='!tw-text-black tw-text-[12px] tw-leading-[15px] tw-mb-3'>Origin</span>
                          </h3>
                          <div class='product-detail-content !tw-text-black tw-text-[12px] tw-leading-[15px]'>
                            {{ product.metafields.custom_fields.details_origin }}
                          </div>
                        </div>
                      {% endif %}
                    </li>
                    <li
                      class='product__tab-content rte tw-text-[12px] tw-leading-[15px]'
                      data-panel='returns'
                      aria-expanded='false'
                    >
                      <span class='hidden stock-ship__shipping available tw-mb-4'>
                        {{- product.metafields.custom_fields.shipping_time | default: 'Ships in 1-2 business days' -}}
                      </span>
                      <div class='!tw-text-black tw-text-[12px] tw-leading-[15px] tw-mb-4'>
                        We offer returns and exchanges on all domestic (US) orders. For returns, you have 30 days from
                        the date of shipping to return for a refund. For exchanges, you have up to 40 days to exchange
                        for something else or store credit.
                      </div>
                    </li>
                    <li
                      class='product__tab-content tw-mt-4 rte tw-text-[12px] tw-leading-[15px]'
                      data-panel='shop-the-look'
                      aria-expanded='false'
                    >
                      <div
                        class='product-grid-container'
                      >
                        <ul
                          data-id='{{ section.id }}'
                          class='
                            grid product-grid grid--3-col-tablet-down
                            grid--3-col-desktop lg:!tw-gap-x-[12px] !tw-px-0
                          '
                        >
                          {% assign skip_card_product_styles = false %}
                          {%- for product in product.metafields.shopthelook.products.value limit: 2 -%}
                            {% assign lazy_load = false %}
                            {%- if forloop.index > 2 -%}
                              {%- assign lazy_load = true -%}
                            {%- endif -%}
                            <li class='grid__item'>
                              {% render 'card-product',
                                card_product: product,
                                media_aspect_ratio: 'adapt',
                                show_secondary_image: true,
                                show_vendor: false,
                                show_rating: false,
                                show_swatches: true,
                                lazy_load: true,
                                quick_add: 'standard'
                              %}
                            </li>
                            {%- assign skip_card_product_styles = true -%}
                          {%- endfor -%}
                        </ul>
                      </div>
                    </li>
                  </ul>
                </div>

              {%- when 'rating' -%}
                <div class='quick-add-hidden tw-flex tw-justify-between tw-items-center tw-mb-4 lg:tw-mb-8'>
                  <nav class='product-breadcrumbs' role='navigation' aria-label='breadcrumbs'>
                    <ol class='tw-flex tw-items-center'>
                      <li class='breadcrumb__root tw-inline-block'>
                        <a
                          class='tw-text-[#767676] tw-text-[12px] tw-leading-[15px] tw-decoration-none transition-colors duration-300'
                          href='/collections/shop/'
                          >Shop</a
                        >
                      </li>
                      {% if collection.url != blank and collection.url != '/collections/shop' %}
                        <li class='breadcrumb__collection'>
                          <a
                            class='tw-text-[#767676] tw-text-[12px] tw-leading-[15px] tw-decoration-none transition-colors duration-300'
                            href='{{ collection.url }}'
                          >
                            {{- collection.title -}}
                          </a>
                        </li>
                      {% endif %}
                    </ol>
                  </nav>
                  <div
                    class='product-rating yotpo bottomLine'
                    data-product-id='{{ product.id }}'
                    data-count='({{ product.metafields.yotpo.reviews_count  }})'
                  ></div>
                </div>

              {%- when 'complementary' -%}
                <product-recommendations
                  class='complementary-products {% if block.settings.make_collapsible_row %} is-accordion{% endif %}{% if block.settings.enable_quick_add %} complementary-products-contains-quick-add{% endif %}'
                  data-url='{{ routes.product_recommendations_url }}?limit={{ block.settings.product_list_limit }}&intent=complementary'
                  data-section-id='{{ section.id }}'
                  data-product-id='{{ product.id }}'
                >
                  {%- if recommendations.performed and recommendations.products_count > 0 -%}
                    <aside
                      aria-label='{{ 'accessibility.complementary_products' | t }}'
                      {{ block.shopify_attributes -}}
                      {% if block.settings.make_collapsible_row %}
                        class='product__accordion accordion'
                      {% endif %}
                    >
                      <div class='complementary-products__container'>
                        {%- if block.settings.make_collapsible_row -%}
                          <details id='Details-{{ block.id }}-{{ section.id }}' open>
                            <summary>
                        {%- endif %}
                        <div class='summary__title'>
                          {%- if block.settings.make_collapsible_row -%}
                            {% render 'icon-accordion', icon: block.settings.icon %}
                            <h2 class='h4 accordion__title'>{{ block.settings.block_heading }}</h2>
                          {%- else -%}
                            <h2 class='h3 accordion__title'>{{ block.settings.block_heading }}</h2>
                          {%- endif -%}
                        </div>
                        {%- if block.settings.make_collapsible_row -%}
                          {{- 'icon-caret.svg' | inline_asset_content -}}
                          </summary>
                        {%- endif -%}
                        <slideshow-component class='slider-mobile-gutter'>
                          {%- assign number_of_slides = recommendations.products_count
                            | plus: 0.0
                            | divided_by: block.settings.products_per_page
                            | ceil
                          -%}
                          <div
                            id='Slider-{{ block.id }}'
                            class='contains-card contains-card--product complementary-slider grid grid--1-col slider slider--everywhere'
                            role='list'
                            {% if number_of_slides > 1 %}
                              aria-label='{{ 'general.slider.name' | t }}'
                            {% endif %}
                          >
                            {% assign skip_card_product_styles = false %}
                            {%- for i in (1..number_of_slides) -%}
                              <div
                                id='Slide-{{ block.id }}-{{ forloop.index }}'
                                class='complementary-slide complementary-slide--{{ settings.card_style }} grid__item slider__slide slideshow__slide'
                                tabindex='-1'
                                role='group'
                                {% if number_of_slides > 1 %}
                                  aria-roledescription='{{ 'sections.slideshow.slide' | t }}'
                                  aria-label='{{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}'
                                {% endif %}
                              >
                                <ul class='list-unstyled' role='list'>
                                  {%- for product in recommendations.products
                                    limit: block.settings.products_per_page
                                    offset: continue
                                  -%}
                                    <li>
                                      {%- if block.settings.enable_quick_add -%}
                                        {% assign quick_add = 'standard' %}
                                      {%- else -%}
                                        {% assign quick_add = 'none' %}
                                      {%- endif -%}
                                      {% render 'card-product',
                                        card_product: product,
                                        media_aspect_ratio: block.settings.image_ratio,
                                        show_secondary_image: false,
                                        lazy_load: false,
                                        skip_styles: skip_card_product_styles,
                                        quick_add: quick_add,
                                        section_id: section.id,
                                        horizontal_class: true,
                                        horizontal_quick_add: true
                                      %}
                                    </li>
                                    {%- assign skip_card_product_styles = true -%}
                                  {%- endfor -%}
                                </ul>
                              </div>
                            {%- endfor -%}
                          </div>
                          {%- if number_of_slides > 1 -%}
                            <div class='slider-buttons'>
                              <button
                                type='button'
                                class='slider-button slider-button--prev'
                                name='previous'
                                aria-label='{{ 'general.slider.previous_slide' | t }}'
                              >
                                <span class='svg-wrapper'>
                                  {{- 'icon-caret.svg' | inline_asset_content -}}
                                </span>
                              </button>
                              <div class='slider-counter slider-counter--{{ block.settings.pagination_style }}{% if block.settings.pagination_style == 'counter' or block.settings.pagination_style == 'numbers' %} caption{% endif %}'>
                                {%- if block.settings.pagination_style == 'counter' -%}
                                  <span class='slider-counter--current'>1</span>
                                  <span aria-hidden='true'> / </span>
                                  <span class='visually-hidden'>{{ 'general.slider.of' | t }}</span>
                                  <span class='slider-counter--total'>{{ number_of_slides }}</span>
                                {%- else -%}
                                  <div class='slideshow__control-wrapper'>
                                    {%- for i in (1..number_of_slides) -%}
                                      <button
                                        class='slider-counter__link slider-counter__link--{{ block.settings.pagination_style }} link'
                                        aria-label='{{ 'sections.slideshow.load_slide' | t }} {{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}'
                                        aria-controls='Slider-{{ block.id }}'
                                      >
                                        {%- if block.settings.pagination_style == 'numbers' -%}
                                          {{ forloop.index -}}
                                        {%- else -%}
                                          <span class='dot'></span>
                                        {%- endif -%}
                                      </button>
                                    {%- endfor -%}
                                  </div>
                                {%- endif -%}
                              </div>
                              <button
                                type='button'
                                class='slider-button slider-button--next'
                                name='next'
                                aria-label='{{ 'general.slider.next_slide' | t }}'
                              >
                                <span class='svg-wrapper'>
                                  {{- 'icon-caret.svg' | inline_asset_content -}}
                                </span>
                              </button>
                            </div>
                          {%- endif -%}
                        </slideshow-component>
                        {%- if block.settings.make_collapsible_row -%}
                          </details>
                        {%- endif -%}
                      </div>
                    </aside>
                  {%- endif -%}
                  {{ 'component-card.css' | asset_url | stylesheet_tag }}
                  {{ 'component-complementary-products.css' | asset_url | stylesheet_tag }}
                  {%- if block.settings.enable_quick_add -%}
                    {{ 'quick-add.css' | asset_url | stylesheet_tag }}
                    <script src='{{ 'quick-add.js' | asset_url }}' defer='defer'></script>
                  {%- endif -%}
                </product-recommendations>
              {%- when 'icon-with-text' -%}
                {% render 'icon-with-text', block: block %}
            {%- endcase -%}
          {%- endfor -%}

          <a
            href='{{ product.url }}'
            class='button button--full-width button--secondary !tw-mt-12 quick-add-only'
          >
            {{ 'products.product.view_full_details' | t }}
          </a>
          <!-- Widget : Quick View Recommendations -->
          <div class='quick-add-only'>
            <div
              data-rebuy-id='234056'
              data-rebuy-shopify-product-ids='{{ product.id }}'
            ></div>

            {% raw %} 
							<script id='rebuy-widget-234056' data-rebuy-shopify-product-ids='{{ product.id }}' type="text/template">
								<div class="rebuy-widget" v-cloak v-on:click="stopPropagation($event)" v-bind:id="'rebuy-widget-' + id"
									v-bind:class="['widget-type-' + config.type.replace('_','-'), 'widget-display-' + config.display_type, products.length > 0 ? 'is-visible' : 'is-hidden']">
									<div class="rebuy-widget-container" v-cloak
										v-bind:class="['widget-display-' + config.display_type, visible ? 'is-visible' : 'is-hidden' ]"
										v-on:click.self="hide()">
										<div class="rebuy-widget-content">
											<div class="rebuy-modal-close" v-on:click="hide()"> <i class="fas fa-times"></i> </div>
											<h4 class="super-title" v-if="config.language.super_title != ''" v-html="config.language.super_title"></h4>
											<h3 class="rebuy-primary-title tw-text-left !tw-py-8 page-width" v-if="config.language.title != ''" v-html="config.language.title"></h3>
											<div class="description" v-if="config.language.description != ''" v-html="config.language.description"></div>
											<div class="recommended-product-grid page-width grid--p product-grid grid--2-col-tablet-down grid--4-col-desktop">
												<li class="grid__item scroll-trigger animate--slide-in" data-cascade v-bind:style="{ '--animation-order': product_index }" v-for="(product, product_index) in products">
													<div class="card-wrapper product-card-wrapper"
														v-bind:class="[product.handle, 'product-id-' + product.id, cartHasProduct(product) ? 'cart-has-item' : '', productTagClasses(product)]">
														<div class="card card--card tw-group card--media gradient tw-rounded-[2px] tw-overflow-hidden"
															v-bind:style="{ '--ratio-percent': '125%' }">
															<div class="card__inner ratio tw-rounded-[2px] tw-overflow-hidden"
																v-bind:style="{ '--ratio-percent': '125%' }">
																<!-- Media Section -->
																<div class="card__media tw-relative">
																	<div class="card-media-carousel">
																		<div class="card-media-container" v-bind:style="{ '--ratio-percent': '100%' }">
																			<a class="rebuy-product-image" 
																				v-if="Shopify.country === 'GB'"
																				v-bind:href="learnMoreURL(product).replace(/^/,'/en-gb').replace('/en-gb/en-gb','/en-gb')"
																				v-bind:class="[hasLearnMore() ? 'clickable' : '']"> 
																				<img v-bind:src="itemImage(product, product.selected_variant, '900x')"
																					v-bind:alt="'View ' + product.title"
																					class="card-media-image motion-reduce"
																					loading="lazy">
																			</a>
																			<a class="rebuy-product-image" 
																				v-else-if="Shopify.country === 'CA'"
																				v-bind:href="learnMoreURL(product).replace(/^/,'/en-ca').replace('/en-ca/en-ca','/en-ca')"
																				v-bind:class="[hasLearnMore() ? 'clickable' : '']"> 
																				<img v-bind:src="itemImage(product, product.selected_variant, '900x')"
																					v-bind:alt="'View ' + product.title"
																					class="card-media-image motion-reduce"
																					loading="lazy">
																			</a>
																			<a class="rebuy-product-image" 
																				v-else
																				v-bind:href="learnMoreURL(product)" 
																				v-on:click="learnMore(product);"
																				v-bind:class="[hasLearnMore() ? 'clickable' : '']">
																				<img v-bind:src="itemImage(product, product.selected_variant, '900x')"
																					v-bind:alt="'View ' + product.title"
																					class="card-media-image motion-reduce"
																					loading="lazy"> 
																			</a>
																		</div>
																	</div>
																</div>


															</div>

															<!-- Product Information -->
															<div class="card__content">
																<div class="card__information tw-flex tw-flex-row tw-justify-between">
																	<div class="primary tw-flex tw-flex-col tw-gap-2">
																		<h3 class="card__heading">
																			<a class="full-unstyled-link tw-text-[12px] tw-leading-[15px] lg:tw-text-[14px] lg:tw-leading-[17px]" 
																				v-if="Shopify.country === 'GB'"
																				v-bind:href="learnMoreURL(product).replace(/^/,'/en-gb').replace('/en-gb/en-gb','/en-gb')"
																				v-html="product.title"
																				v-bind:class="[hasLearnMore() ? 'clickable gb' : '']"></a>
																			<a class="full-unstyled-link tw-text-[12px] tw-leading-[15px] lg:tw-text-[14px] lg:tw-leading-[17px]" 
																				v-else-if="Shopify.country === 'CA'"
																				v-bind:href="learnMoreURL(product).replace(/^/,'/en-ca').replace('/en-ca/en-ca','/en-ca')"
																				v-html="product.title"
																				v-bind:class="[hasLearnMore() ? 'clickable ca' : '']"></a>
																			<a class="full-unstyled-link tw-text-[12px] tw-leading-[15px] lg:tw-text-[14px] lg:tw-leading-[17px]" 
																				v-else
																				v-bind:href="learnMoreURL(product)"
																				v-on:click="learnMore(product);" 
																				v-html="product.title"
																				v-bind:class="[hasLearnMore() ? 'clickable us' : '']"></a>
																		</h3>

																		<div class="card-information">
																			<!-- Variant Title -->
																			<div class="rebuy-variant-title caption-large light" v-if="showVariantTitle(product)" v-html="product.selected_variant.title">
																			</div>

																			<!-- Reviews -->
																			<div class="rating" v-if="hasProductReviews(product)"> 
																				<span class="rebuy-star-rating"> 
																					<span class="rebuy-star-rating-background"></span> 
																					<span class="rebuy-star-rating-foreground" v-bind:style="{ width: productReviewRatingPercentage(product) }"></span> 
																				</span> 
																				<span class="rebuy-review-count" v-html="productReviewCount(product)"></span> 
																			</div>

																			<!-- Price -->
																			<div class="price">
																				<div class="price__container">
																					<div class="price__sale" v-if="variantOnSale(product, product.selected_variant)">
																						<span class="visually-hidden visually-hidden--inline">Regular price</span>
																						<span>
																							<s class="price-item price-item--regular" v-html="formatMoney(variantCompareAtPrice(product, product.selected_variant)).replace('.00', '')"></s>
																						</span>
																						<span class="visually-hidden visually-hidden--inline">Sale price</span>
																						<span class="price-item price-item--sale price-item--last" v-html="formatMoney(variantPrice(product, product.selected_variant)).replace('.00', '')"></span>
																					</div>
																					<div class="price__regular" v-else>
																						<span class="visually-hidden visually-hidden--inline">Regular price</span>
																						<span class="price-item price-item--regular" v-html="formatMoney(variantPrice(product, product.selected_variant)).replace('.00', '')"></span>
																					</div>
																				</div>
																			</div>

																			<!-- Variant Selector -->
																			<div class="rebuy-variant-selector tw-mt-3" v-if="product.variants && product.variants.length > 1">
																				<select class="rebuy-select tw-w-full tw-text-[11px] tw-p-2 tw-border tw-rounded-[2px]" 
																						v-on:change="selectVariant(product, $event.target.value)">
																					<option v-for="variant in product.variants" 
																							v-bind:value="variant.id"
																							v-bind:selected="variant.id === product.selected_variant.id"
																							v-bind:disabled="!variantAvailable(variant)">
																						{{ variant.title }}
																					</option>
																				</select>
																			</div>

																			<!-- Add to Cart Button -->
																			<div class="rebuy-add-to-cart tw-mt-3">
																				<button class="rebuy-button tw-w-full tw-text-[10px] lg:tw-text-[12px] tw-rounded-[2px] tw-py-2 tw-px-4"
																						v-bind:class="{ working: (product.status != 'ready' && product.status != 'selecting') }"
																						v-bind:disabled="!(variantAvailable(product.selected_variant)) || (product.status != 'ready' && product.status != 'selecting')"
																						v-bind:alt="'Add ' + product.title + ' to Cart'"
																						v-on:click="handleAddToCart(product, $event)"
																						type="button">
																					<span class="rebuy-button-text">Add to Cart</span>
																					<span class="rebuy-button-loading" style="display: none;">
																						<svg class="rebuy-loading-spinner" width="16" height="16" viewBox="0 0 24 24" fill="none">
																							<circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2" opacity="0.3"/>
																							<path d="M12 2a10 10 0 0 1 10 10" stroke="currentColor" stroke-width="2">
																								<animateTransform attributeName="transform" type="rotate" dur="1s" repeatCount="indefinite" values="0 12 12;360 12 12"/>
																							</path>
																						</svg>
																					</span>
																				</button>
																			</div>

																			<!-- Product Description -->
																			<div class="rebuy-product-description caption-large light" v-if="showProductDescription(product)"
																				v-html="text(product.body_html)"></div>
																		</div>
																	</div>

																	<!-- Swatches Section -->
																	<div class="secondary tw-flex tw-flex-col tw-gap-3 tw-pt-[1px]">
																		<!-- Color Swatches -->

																		<!-- Debug: Only show for first product -->
																		<div v-if="product_index === 10000" class="debug-info tw-text-[8px] tw-bg-yellow-100 tw-p-2 tw-mb-2 tw-border">
																			<strong>🐛 Debug - Product {{ product.id }}:</strong><br/>
																			<strong>Title:</strong> {{ product.title }}<br/>
																			<strong>Standard Options:</strong> {{ (product.options || []).length }} options<br/>
																			<div v-if="product.options && product.options.length > 0">
																				<div v-for="(option, idx) in product.options">
																					Option {{ idx }}: {{ option.name }} = {{ (option.values || []).join(', ') }}
																				</div>
																			</div>
																			<strong>Product Keys:</strong> {{ Object.keys(product).join(', ') }}<br/>
																			<strong>Colorsets JSON:</strong> {{ product?.metafields?.options?.colorsets }}<br/>

																			<strong>Variants Count:</strong> {{ (product.variants || []).length }}<br/>
																			<strong>Has Images:</strong> {{ (product.images || []).length }} images
																		</div>

																		<!-- Temporarily disabled colorsets until we understand the data structure -->
																		<div v-if="false" class="rebuy-color-swatches">
																			<!-- Will implement once we see the debug data -->
																		</div>
																	</div>
																</div>

																<!-- Badges -->
																<div class="card__badge">
																	<span v-if="!variantAvailable(product.selected_variant)"
																		class="badge badge--bottom-left color-accent-1">
																		Sold out
																	</span>
																	<span v-else-if="variantOnSale(product, product.selected_variant)"
																		class="badge badge--bottom-left color-accent-2">
																		Sale
																	</span>
																</div>
															</div>

															<!-- Additional Options (Subscription, Quantity) -->
															<div class="rebuy-product-options tw-p-4" v-if="showSubscriptionOptions(product) || hasQuantityInputEnabled()">
																<div class="subscription-checkbox tw-mb-2" v-if="showSubscriptionOptions(product)"> 
																	<label class="rebuy-checkbox-label tw-flex tw-items-center tw-gap-2"> 
																		<input class="checkbox-input rebuy-checkbox"
																			v-model="product.subscription" 
																			v-on:change="toggleSubscription(product)" 
																			type="checkbox" /> 
																		<span class="checkbox-label tw-text-[10px]" v-html="upgradeToSubscriptionLabel(product)"></span> 
																	</label> 
																</div>
																<div class="subscription-frequency tw-mb-2" v-if="showSubscriptionFrequency(product)"> 
																	<select class="rebuy-select tw-text-[10px]"
																		v-model="product.subscription_frequency" 
																		v-on:change="updateSubscriptionFrequency(product)">
																		<option v-for="frequency in product.subscription_frequencies" v-bind:value="frequency">
																			{{ frequencyLabel(frequency, product.subscription_interval) }}
																		</option>
																	</select> 
																</div>
																<div class="product-quantity" v-if="hasQuantityInputEnabled()">
																	<div class="rebuy-select-wrapper tw-flex tw-items-center tw-gap-2"> 
																		<label class="rebuy-label tw-text-[10px]">Quantity</label> 
																		<select class="rebuy-select tw-text-[10px]" v-model="product.quantity">
																			<option v-for="n in maxQuantityInputValue()" v-bind:value="n">{{ n }}</option>
																		</select> 
																	</div>
																</div>
															</div>
														</div>
													</div>
												</li>
											</div>
											<div class="rebuy-modal-actions" v-if="showContinueButton()"> 
												<button class="rebuy-button decline" v-on:click="hide()" type="button"> 
													<span v-html="continueLabel()"></span> 
												</button> 
											</div>
										</div>
									</div>
								</div>
							</script>
						{% endraw %}

            <!-- Custom Add to Cart Handler with Loading/Success States -->
            <script>
              // Add custom handleAddToCart function to the global scope for Rebuy Vue templates
              window.handleAddToCart = function (product, event) {
                const button = event.target.closest('button');
                const textSpan = button.querySelector('.rebuy-button-text');
                const loadingSpan = button.querySelector('.rebuy-button-loading');

                // Store original text
                const originalText = textSpan.innerHTML;

                console.log('Button clicked, showing loading state');

                // Show loading state using CSS classes
                textSpan.classList.add('hide');
                loadingSpan.classList.add('show');
                button.disabled = true;

                // Get the selected variant ID
                const variantId = product.selected_variant ? product.selected_variant.id : product.variants[0].id;

                // Create form data for the cart API
                const formData = {
                  items: [
                    {
                      id: variantId,
                      quantity: 1,
                    },
                  ],
                };

                // Add to cart using Shopify's Cart API
                fetch(window.Shopify.routes.root + 'cart/add.js', {
                  method: 'POST',
                  headers: {
                    'Content-Type': 'application/json',
                  },
                  body: JSON.stringify(formData),
                })
                  .then((response) => response.json())
                  .then((data) => {
                    console.log('Product added to cart:', data);
                    console.log('Showing success message');

                    // Show success state with more aggressive approach
                    loadingSpan.classList.remove('show');
                    loadingSpan.style.display = 'none';

                    // Force the success message using multiple approaches
                    textSpan.innerHTML = 'Added to Cart';
                    textSpan.textContent = 'Added to Cart';
                    textSpan.innerText = 'Added to Cart';
                    textSpan.classList.remove('hide');
                    textSpan.style.display = 'inline-block';
                    textSpan.style.visibility = 'visible';
                    textSpan.style.opacity = '1';

                    // Add a distinctive class for success state
                    textSpan.classList.add('success-message');
                    button.classList.add('success-message');

                    // Mark as success mode to prevent overrides
                    textSpan.dataset.successMode = 'true';

                    console.log('Success message set:', textSpan.innerHTML);
                    console.log('textContent:', textSpan.textContent);
                    console.log('innerText:', textSpan.innerText);
                    console.log('Text span element:', textSpan);

                    // Use a MutationObserver to prevent other scripts from changing the text
                    const observer = new MutationObserver(function (mutations) {
                      mutations.forEach(function (mutation) {
                        if (mutation.type === 'childList' || mutation.type === 'characterData') {
                          if (textSpan.dataset.successMode === 'true' && textSpan.innerHTML !== 'Added to Cart') {
                            console.log('Text was changed by another script, restoring success message');
                            textSpan.innerHTML = 'Added to Cart';
                          }
                        }
                      });
                    });

                    observer.observe(textSpan, {
                      childList: true,
                      subtree: true,
                      characterData: true,
                    });

                    // Also use setInterval as backup to force the text
                    const interval = setInterval(() => {
                      if (textSpan.dataset.successMode === 'true') {
                        if (textSpan.innerHTML !== 'Added to Cart') {
                          console.log('Forcing success message via interval');
                          textSpan.innerHTML = 'Added to Cart';
                        }
                      }
                    }, 50); // Check every 50ms

                    // Update cart count if available (but delay it to avoid conflicts)
                    setTimeout(() => {
                      document.dispatchEvent(new CustomEvent('cart:updated'));
                    }, 100);

                    // Reset to original state after 2 seconds
                    setTimeout(() => {
                      console.log('Resetting button to original state');

                      // Clean up observer and interval
                      observer.disconnect();
                      clearInterval(interval);

                      // Reset button state
                      textSpan.classList.remove('success-message');
                      button.classList.remove('success-message');
                      textSpan.innerHTML = originalText;
                      textSpan.dataset.successMode = 'false';
                      button.disabled = false;
                    }, 2000);
                  })
                  .catch((error) => {
                    console.error('Error adding to cart:', error);
                    // Reset button on error
                    loadingSpan.classList.remove('show');
                    textSpan.innerHTML = 'Error - Try again';
                    textSpan.classList.remove('hide');

                    // Reset to original state after 2 seconds
                    setTimeout(() => {
                      textSpan.innerHTML = originalText;
                      button.disabled = false;
                    }, 2000);
                  });
              };
            </script>

            <!-- Custom Styles for Loading/Success States -->
            <style>
              .rebuy-button {
                position: relative;
                display: flex;
                align-items: center;
                justify-content: center;
                min-height: 36px; /* Ensure consistent button height */
              }

              .rebuy-button-text {
                display: inline-block !important;
                transition: opacity 0.2s ease;
              }

              .rebuy-button-loading {
                display: none;
                align-items: center;
                justify-content: center;
              }

              .rebuy-button-loading.show {
                display: inline-flex !important;
              }

              .rebuy-button-text.hide {
                display: none !important;
              }

              /* Success state styling */
              .rebuy-button-text {
                color: inherit;
                font-weight: inherit;
                font-size: inherit;
              }

              .rebuy-loading-spinner {
                width: 16px;
                height: 16px;
                animation: spin 1s linear infinite;
              }

              @keyframes spin {
                from {
                  transform: rotate(0deg);
                }
                to {
                  transform: rotate(360deg);
                }
              }

              .rebuy-button:disabled {
                opacity: 0.7;
                cursor: not-allowed;
              }

              /* Clean styling for button text */
              .rebuy-button .rebuy-button-text {
                display: inline-block !important;
                visibility: visible !important;
                opacity: 1 !important;
              }

              /* Override the existing ::after pseudo-element that displays the button text */
              .rebuy-widget .rebuy-button.success-message span::after,
              .cart-drawer .rebuy-button.success-message span::after,
              .rebuy-button.success-message span::after {
                content: 'Added to Cart' !important;
                font-size: 11px !important;
              }

              /* Hide the button-level ::after to prevent double text during success */
              .rebuy-widget .rebuy-button.success-message::after,
              .cart-drawer .rebuy-button.success-message::after,
              .rebuy-button.success-message::after {
                display: none !important;
              }

              /* Hide button text during loading state (disabled but not success) */
              .rebuy-widget .rebuy-button:disabled:not(.success-message)::after,
              .cart-drawer .rebuy-button:disabled:not(.success-message)::after,
              .rebuy-button:disabled:not(.success-message)::after {
                display: none !important;
              }

              .rebuy-widget .rebuy-button:disabled:not(.success-message) span::after,
              .cart-drawer .rebuy-button:disabled:not(.success-message) span::after,
              .rebuy-button:disabled:not(.success-message) span::after {
                display: none !important;
              }
            </style>
          </div>
          <!-- End Widget : Product Recommendations -->
        </section>
      </div>
    </div>

    {% render 'product-media-modal', variant_images: variant_images %}

    {% assign popups = section.blocks | where: 'type', 'popup' %}
    {%- for block in popups -%}
      <modal-dialog id='PopupModal-{{ block.id }}' class='product-popup-modal' {{ block.shopify_attributes }}>
        <div
          role='dialog'
          aria-label='{{ block.settings.text }}'
          aria-modal='true'
          class='product-popup-modal__content'
          tabindex='-1'
        >
          <button
            id='ModalClose-{{ block.id }}'
            type='button'
            class='product-popup-modal__toggle'
            aria-label='{{ 'accessibility.close' | t }}'
          >
            {{- 'icon-close.svg' | inline_asset_content -}}
          </button>
          <div class='product-popup-modal__content-info'>
            <h1 class='h2'>{{ block.settings.page.title | escape }}</h1>
            {{ block.settings.page.content }}
          </div>
        </div>
      </modal-dialog>
    {%- endfor -%}

    {%- if product.media.size > 0 -%}
      <script src='{{ 'product-modal.js' | asset_url }}' defer='defer'></script>
      <script src='{{ 'media-gallery.js' | asset_url }}' defer='defer'></script>

      {%- comment -%} Enhanced gallery with Swiper for all layouts except swiper_thumbnails {%- endcomment -%}
      {%- unless section.settings.gallery_layout == 'swiper_thumbnails' -%}
        <!-- Swiper CSS and JS for Enhanced Gallery -->
        <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/Swiper/11.0.5/swiper-bundle.min.css'>
        <script src='https://cdnjs.cloudflare.com/ajax/libs/Swiper/11.0.5/swiper-bundle.min.js' defer='defer'></script>
        {% render 'enhanced-gallery-styles' %}
        {% render 'enhanced-gallery-script' %}
      {%- endunless -%}

      {%- if section.settings.gallery_layout == 'swiper_thumbnails' -%}
        <!-- Swiper CSS and JS for Product Gallery -->
        <link rel='stylesheet' href='https://cdnjs.cloudflare.com/ajax/libs/Swiper/11.0.5/swiper-bundle.min.css'>
        <script src='https://cdnjs.cloudflare.com/ajax/libs/Swiper/11.0.5/swiper-bundle.min.js' defer='defer'></script>
        {% render 'product-swiper-gallery-styles' %}
        {% render 'product-swiper-gallery-script' %}
      {%- endif -%}
    {%- endif -%}

    {%- if first_3d_model -%}
      <script type='application/json' id='ProductJSON-{{ product.id }}'>
        {{ product.media | where: 'media_type', 'model' | json }}
      </script>
      <script src='{{ 'product-model.js' | asset_url }}' defer></script>
    {%- endif -%}

    {%- liquid
      if product.selected_or_first_available_variant.featured_media
        assign seo_media = product.selected_or_first_available_variant.featured_media
      else
        assign seo_media = product.featured_media
      endif
    -%}

    <script type='application/ld+json'>
      {{ product | structured_data }}
    </script>
  </div>
  {%- if section.settings.show_sticky_cart_button -%}
    {% render 'product-sticky-form', product: product %}
  {%- endif -%}

  <script>
    // Scoped tabbed list functionality that works in both main product and modal contexts
    function initializeTabbedList(container = document) {
      const tabbedListContainer = container.querySelector('.product__tabbed-list');
      if (!tabbedListContainer) {
        console.log('No tabbed list container found in:', container);
        return;
      }

      console.log('Initializing tabbed list in:', container, tabbedListContainer);

      const tabs = tabbedListContainer.querySelectorAll('.product__tab');
      tabs.forEach((button) => {
        // Remove existing listeners to prevent duplicates
        button.removeEventListener('click', handleTabClick);
        button.addEventListener('click', handleTabClick);
      });

      // Ensure initial state is correct
      const initialActiveContent = tabbedListContainer.querySelector('.product__tab-content[aria-expanded="true"]');
      const allContent = tabbedListContainer.querySelectorAll('.product__tab-content');
      console.log('Initial state - active content:', initialActiveContent, 'all content:', allContent.length);

      function handleTabClick(e) {
        e.preventDefault();
        const panel = e.target.dataset.panel;
        if (!panel) return;

        console.log('Tab clicked:', panel);

        // Find all elements within the current tabbed list container
        const currentActiveTab = tabbedListContainer.querySelector('.product__tab.tw-border-black');
        const currentActiveContent = tabbedListContainer.querySelector('.product__tab-content[aria-expanded="true"]');
        const targetContent = tabbedListContainer.querySelector(`.product__tab-content[data-panel="${panel}"]`);

        console.log('Current active tab:', currentActiveTab);
        console.log('Current active content:', currentActiveContent);
        console.log('Target content:', targetContent);

        // Deactivate current tab and content
        if (currentActiveTab) {
          currentActiveTab.classList.remove('tw-border-black');
        }
        if (currentActiveContent) {
          currentActiveContent.setAttribute('aria-expanded', false);
          console.log('Deactivated:', currentActiveContent);
        }

        // Activate new tab and content
        if (targetContent) {
          targetContent.setAttribute('aria-expanded', true);
          console.log('Activated:', targetContent);
        }
        e.target.classList.add('tw-border-black');
      }
    }

    // Initialize on page load
    initializeTabbedList();

    // Re-initialize when product info is loaded (for modals)
    document.addEventListener('product-info:loaded', function (e) {
      setTimeout(() => {
        initializeTabbedList(e.target.closest('quick-add-modal') || document);
      }, 100);
    });
  </script>
</product-info>

{% schema %}
{
  "name": "t:sections.main-product.name",
  "tag": "section",
  "class": "section",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "text",
      "name": "t:sections.main-product.blocks.text.name",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "text",
          "default": "t:sections.main-product.blocks.text.settings.text.default",
          "label": "t:sections.main-product.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.main-product.blocks.title.name",
      "limit": 1
    },
    {
      "type": "price",
      "name": "t:sections.main-product.blocks.price.name",
      "limit": 1
    },
    {
      "type": "sku",
      "name": "t:sections.main-product.blocks.sku.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.sku.settings.text_style.label"
        }
      ]
    },
    {
      "type": "inventory",
      "name": "t:sections.main-product.blocks.inventory.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.inventory.settings.text_style.label"
        },
        {
          "type": "range",
          "id": "inventory_threshold",
          "label": "t:sections.main-product.blocks.inventory.settings.inventory_threshold.label",
          "min": 0,
          "max": 100,
          "step": 1,
          "info": "t:sections.main-product.blocks.inventory.settings.inventory_threshold.info",
          "default": 10
        },
        {
          "type": "checkbox",
          "id": "show_inventory_quantity",
          "label": "t:sections.main-product.blocks.inventory.settings.show_inventory_quantity.label",
          "default": true
        }
      ]
    },
    {
      "type": "quantity_selector",
      "name": "t:sections.main-product.blocks.quantity_selector.name",
      "limit": 1
    },
    {
      "type": "tabbed_list",
      "name": "Tabbed List",
      "limit": 1
    },
    {
      "type": "swatch_picker",
      "name": "Swatch picker",
      "limit": 1
    },
    {
      "type": "variant_picker",
      "name": "t:sections.main-product.blocks.variant_picker.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            {
              "value": "dropdown",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__1.label"
            },
            {
              "value": "button",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__2.label"
            }
          ],
          "default": "button",
          "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.label"
        },
        {
          "id": "swatch_shape",
          "label": "t:sections.main-product.blocks.variant_picker.settings.swatch_shape.label",
          "type": "select",
          "info": "t:sections.main-product.blocks.variant_picker.settings.swatch_shape.info",
          "options": [
            {
              "value": "circle",
              "label": "t:sections.main-product.blocks.variant_picker.settings.swatch_shape.options__1.label"
            },
            {
              "value": "square",
              "label": "t:sections.main-product.blocks.variant_picker.settings.swatch_shape.options__2.label"
            },
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.variant_picker.settings.swatch_shape.options__3.label"
            }
          ],
          "default": "circle"
        }
      ]
    },
    {
      "type": "buy_buttons",
      "name": "t:sections.main-product.blocks.buy_buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.info"
        },
        {
          "type": "checkbox",
          "id": "show_gift_card_recipient",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.info"
        }
      ]
    },
    {
      "type": "description",
      "name": "t:sections.main-product.blocks.description.name",
      "limit": 1
    },
    {
      "type": "share",
      "name": "t:sections.main-product.blocks.share.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "share_label",
          "label": "t:sections.main-product.blocks.share.settings.text.label",
          "default": "t:sections.main-product.blocks.share.settings.text.default"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.featured_image_info.content"
        },
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.share.settings.title_info.content"
        }
      ]
    },
    {
      "type": "custom_liquid",
      "name": "t:sections.custom-liquid.name",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.custom-liquid.settings.custom_liquid.label",
          "info": "t:sections.custom-liquid.settings.custom_liquid.info"
        }
      ]
    },
    {
      "type": "collapsible_tab",
      "name": "t:sections.main-product.blocks.collapsible_tab.name",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "t:sections.main-product.blocks.collapsible_tab.settings.heading.default",
          "info": "t:sections.main-product.blocks.collapsible_tab.settings.heading.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.heading.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "check_mark",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.content.label"
        },
        {
          "type": "page",
          "id": "page",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.page.label"
        }
      ]
    },
    {
      "type": "popup",
      "name": "t:sections.main-product.blocks.popup.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "t:sections.main-product.blocks.popup.settings.link_label.default",
          "label": "t:sections.main-product.blocks.popup.settings.link_label.label"
        },
        {
          "id": "page",
          "type": "page",
          "label": "t:sections.main-product.blocks.popup.settings.page.label"
        }
      ]
    },
    {
      "type": "rating",
      "name": "t:sections.main-product.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.rating.settings.paragraph.content"
        }
      ]
    },
    {
      "type": "complementary",
      "name": "t:sections.main-product.blocks.complementary_products.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.complementary_products.settings.paragraph.content"
        },
        {
          "type": "text",
          "id": "block_heading",
          "default": "t:sections.main-product.blocks.complementary_products.settings.heading.default",
          "label": "t:sections.main-product.blocks.complementary_products.settings.heading.label"
        },
        {
          "type": "checkbox",
          "id": "make_collapsible_row",
          "default": false,
          "label": "t:sections.main-product.blocks.complementary_products.settings.make_collapsible_row.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "price_tag",
          "info": "t:sections.main-product.blocks.complementary_products.settings.icon.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "range",
          "id": "product_list_limit",
          "min": 1,
          "max": 10,
          "step": 1,
          "default": 10,
          "label": "t:sections.main-product.blocks.complementary_products.settings.product_list_limit.label"
        },
        {
          "type": "range",
          "id": "products_per_page",
          "min": 1,
          "max": 4,
          "step": 1,
          "default": 3,
          "label": "t:sections.main-product.blocks.complementary_products.settings.products_per_page.label"
        },
        {
          "type": "select",
          "id": "pagination_style",
          "options": [
            {
              "value": "dots",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_1"
            },
            {
              "value": "counter",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_2"
            },
            {
              "value": "numbers",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_3"
            }
          ],
          "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.label",
          "default": "counter"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.complementary_products.settings.product_card.heading"
        },
        {
          "type": "select",
          "id": "image_ratio",
          "options": [
            {
              "value": "portrait",
              "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.options.option_1"
            },
            {
              "value": "square",
              "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.options.option_2"
            }
          ],
          "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.label",
          "default": "square"
        },
        {
          "type": "checkbox",
          "id": "enable_quick_add",
          "label": "t:sections.main-product.blocks.complementary_products.settings.enable_quick_add.label",
          "default": false
        }
      ]
    },
    {
      "type": "icon-with-text",
      "name": "t:sections.main-product.blocks.icon_with_text.name",
      "settings": [
        {
          "type": "select",
          "id": "layout",
          "options": [
            {
              "value": "horizontal",
              "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.options__1.label"
            },
            {
              "value": "vertical",
              "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.options__2.label"
            }
          ],
          "default": "horizontal",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.label"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.icon_with_text.settings.content.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.content.info"
        },
        {
          "type": "select",
          "id": "icon_1",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "heart",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_1.label"
        },
        {
          "type": "image_picker",
          "id": "image_1",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_1.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_1",
          "default": "t:sections.main-product.blocks.icon_with_text.settings.heading_1.default",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_1.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        },
        {
          "type": "select",
          "id": "icon_2",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "return",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_2.label"
        },
        {
          "type": "image_picker",
          "id": "image_2",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_2.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_2",
          "default": "t:sections.main-product.blocks.icon_with_text.settings.heading_2.default",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_2.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        },
        {
          "type": "select",
          "id": "icon_3",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "truck",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_3.label"
        },
        {
          "type": "image_picker",
          "id": "image_3",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_3.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_3",
          "default": "t:sections.main-product.blocks.icon_with_text.settings.heading_3.default",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_3.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_sticky_info",
      "default": true,
      "label": "t:sections.main-product.settings.enable_sticky_info.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.header.content",
      "info": "t:sections.main-product.settings.header.info"
    },
    {
      "type": "select",
      "id": "media_size",
      "options": [
        {
          "value": "small",
          "label": "t:sections.main-product.settings.media_size.options__1.label"
        },
        {
          "value": "medium",
          "label": "t:sections.main-product.settings.media_size.options__2.label"
        },
        {
          "value": "large",
          "label": "t:sections.main-product.settings.media_size.options__3.label"
        }
      ],
      "default": "large",
      "label": "t:sections.main-product.settings.media_size.label",
      "info": "t:sections.main-product.settings.media_size.info"
    },
    {
      "type": "checkbox",
      "id": "constrain_to_viewport",
      "default": true,
      "label": "t:sections.main-product.settings.constrain_to_viewport.label"
    },
    {
      "type": "select",
      "id": "media_fit",
      "options": [
        {
          "value": "contain",
          "label": "t:sections.main-product.settings.media_fit.options__1.label"
        },
        {
          "value": "cover",
          "label": "t:sections.main-product.settings.media_fit.options__2.label"
        }
      ],
      "default": "contain",
      "label": "t:sections.main-product.settings.media_fit.label"
    },
    {
      "type": "select",
      "id": "gallery_layout",
      "options": [
        {
          "value": "stacked",
          "label": "t:sections.main-product.settings.gallery_layout.options__1.label"
        },
        {
          "value": "columns",
          "label": "t:sections.main-product.settings.gallery_layout.options__2.label"
        },
        {
          "value": "thumbnail",
          "label": "t:sections.main-product.settings.gallery_layout.options__3.label"
        },
        {
          "value": "thumbnail_slider",
          "label": "t:sections.main-product.settings.gallery_layout.options__4.label"
        },
        {
          "value": "swiper_thumbnails",
          "label": "Swiper with Left Thumbnails"
        }
      ],
      "default": "stacked",
      "label": "t:sections.main-product.settings.gallery_layout.label"
    },
    {
      "type": "select",
      "id": "media_position",
      "options": [
        {
          "value": "left",
          "label": "t:sections.main-product.settings.media_position.options__1.label"
        },
        {
          "value": "right",
          "label": "t:sections.main-product.settings.media_position.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:sections.main-product.settings.media_position.label",
      "info": "t:sections.main-product.settings.media_position.info"
    },
    {
      "type": "select",
      "id": "image_zoom",
      "options": [
        {
          "value": "lightbox",
          "label": "t:sections.main-product.settings.image_zoom.options__1.label"
        },
        {
          "value": "hover",
          "label": "t:sections.main-product.settings.image_zoom.options__2.label"
        },
        {
          "value": "none",
          "label": "t:sections.main-product.settings.image_zoom.options__3.label"
        }
      ],
      "default": "lightbox",
      "label": "t:sections.main-product.settings.image_zoom.label",
      "info": "t:sections.main-product.settings.image_zoom.info"
    },
    {
      "type": "select",
      "id": "mobile_thumbnails",
      "options": [
        {
          "value": "columns",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__1.label"
        },
        {
          "value": "show",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__2.label"
        },
        {
          "value": "hide",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__3.label"
        }
      ],
      "default": "hide",
      "label": "t:sections.main-product.settings.mobile_thumbnails.label"
    },
    {
      "type": "checkbox",
      "id": "show_sticky_cart_button",
      "label": "Show sticky add to cart button",
      "info": "Displays a sticky add to cart bar at the bottom of the page when scrolling past the main product form",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "hide_variants",
      "default": false,
      "label": "t:sections.main-product.settings.hide_variants.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_looping.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
